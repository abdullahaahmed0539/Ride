/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernorPreventLateQuorumMock,
  GovernorPreventLateQuorumMockInterface,
} from "../GovernorPreventLateQuorumMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "contract IVotes",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "votingDelay_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingPeriod_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quorum_",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "voteExtension_",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "oldVoteExtension",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "newVoteExtension",
        type: "uint64",
      },
    ],
    name: "LateQuorumVoteExtensionSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "extendedDeadline",
        type: "uint64",
      },
    ],
    name: "ProposalExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposalThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "ProposalThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "VotingDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "VotingPeriodSet",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lateQuorumVoteExtension",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "newVoteExtension",
        type: "uint64",
      },
    ],
    name: "setLateQuorumVoteExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "setProposalThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "setVotingDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "setVotingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002d9938038062002d998339810160408190526200003591620003d3565b8085858560008a806200005c6040805180820190915260018152603160f81b602082015290565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c0526101205250508251620001029250600091506020840190620002e2565b506200011090508362000151565b6200011b8262000192565b620001268162000238565b5050506001600160a01b031661014052620001418162000279565b5050600855506200052f92505050565b60025460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600255565b60008111620001f75760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b606482015260840160405180910390fd5b60035460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600355565b60045460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600455565b600654604080516001600160401b03928316815291831660208301527f7ca4ac117ed3cdce75c1161d8207c440389b1a15d69d096831664657c07dafc2910160405180910390a1600680546001600160401b0319166001600160401b0392909216919091179055565b828054620002f090620004f2565b90600052602060002090601f0160209004810192826200031457600085556200035f565b82601f106200032f57805160ff19168380011785556200035f565b828001600101855582156200035f579182015b828111156200035f57825182559160200191906001019062000342565b506200036d92915062000371565b5090565b5b808211156200036d576000815560010162000372565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620003b657600080fd5b919050565b80516001600160401b0381168114620003b657600080fd5b60008060008060008060c08789031215620003ed57600080fd5b86516001600160401b03808211156200040557600080fd5b818901915089601f8301126200041a57600080fd5b8151818111156200042f576200042f62000388565b604051601f8201601f19908116603f011681019083821181831017156200045a576200045a62000388565b81604052828152602093508c848487010111156200047757600080fd5b600091505b828210156200049b57848201840151818301850152908301906200047c565b82821115620004ad5760008484830101525b9950620004bf9150508982016200039e565b96505050604087015193506060870151925060808701519150620004e660a08801620003bb565b90509295509295509295565b600181811c908216806200050757607f821691505b602082108114156200052957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161280862000591600039600081816105e90152610fb401526000611592015260006115e1015260006115bc015260006115150152600061153f0152600061156901526128086000f3fe6080604052600436106101bb5760003560e01c80637b3c71d3116100ec578063dd4e2ba51161008a578063eb9019d411610064578063eb9019d414610575578063ece40cc114610595578063f8ce560a146105b5578063fc0c546a146105d757600080fd5b8063dd4e2ba5146104db578063deaaa7cc14610521578063ea0217cf1461055557600080fd5b8063c01f9e37116100c6578063c01f9e371461045b578063c28bc2fa1461047b578063c59057e41461049b578063d07f91e9146104bb57600080fd5b80637b3c71d3146104065780637d5e81e214610426578063b58131b01461044657600080fd5b80633bccf4fd11610159578063544ffc9c11610133578063544ffc9c1461034757806354fd4d501461039c57806356781388146103c657806370b0f660146103e657600080fd5b80633bccf4fd146102b05780633e4f49e6146102d057806343859632146102fd57600080fd5b80632656227d116101955780632656227d1461023f5780632d63f6931461025257806332b8113e146102725780633932abb11461029b57600080fd5b806301ffc9a7146101c957806302a251a3146101fe57806306fdde031461021d57600080fd5b366101c457005b005b600080fd5b3480156101d557600080fd5b506101e96101e4366004611e02565b610623565b60405190151581526020015b60405180910390f35b34801561020a57600080fd5b506003545b6040519081526020016101f5565b34801561022957600080fd5b5061023261065a565b6040516101f59190611e88565b61020f61024d3660046120dc565b6106ec565b34801561025e57600080fd5b5061020f61026d36600461216c565b6107fe565b34801561027e57600080fd5b5060065460405167ffffffffffffffff90911681526020016101f5565b3480156102a757600080fd5b5060025461020f565b3480156102bc57600080fd5b5061020f6102cb366004612196565b610837565b3480156102dc57600080fd5b506102f06102eb36600461216c565b6108cb565b6040516101f591906121fa565b34801561030957600080fd5b506101e9610318366004612222565b60008281526005602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b34801561035357600080fd5b5061038161036236600461216c565b6000908152600560205260409020805460018201546002909201549092565b604080519384526020840192909252908201526060016101f5565b3480156103a857600080fd5b506040805180820190915260018152603160f81b6020820152610232565b3480156103d257600080fd5b5061020f6103e136600461224e565b6109d7565b3480156103f257600080fd5b506101c261040136600461216c565b610a00565b34801561041257600080fd5b5061020f6104213660046122ba565b610a56565b34801561043257600080fd5b5061020f610441366004612314565b610aa8565b34801561045257600080fd5b5061020f610dfd565b34801561046757600080fd5b5061020f61047636600461216c565b610e0d565b34801561048757600080fd5b506101c26104963660046123d5565b610e18565b3480156104a757600080fd5b5061020f6104b63660046120dc565b610eab565b3480156104c757600080fd5b506101c26104d6366004612417565b610ee5565b3480156104e757600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610232565b34801561052d57600080fd5b5061020f7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561056157600080fd5b506101c261057036600461216c565b610f38565b34801561058157600080fd5b5061020f610590366004612441565b610f8b565b3480156105a157600080fd5b506101c26105b036600461216c565b611037565b3480156105c157600080fd5b5061020f6105d036600461216c565b5060085490565b3480156105e357600080fd5b5061060b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101f5565b60006001600160e01b0319821663bf26d89760e01b148061065457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546106699061246b565b80601f01602080910402602001604051908101604052809291908181526020018280546106959061246b565b80156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b5050505050905090565b6000806106fb86868686610eab565b90506000610708826108cb565b9050600481600781111561071e5761071e6121e4565b148061073b57506005816007811115610739576107396121e4565b145b6107965760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b60648201526084015b60405180910390fd5b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a16107f4828888888861108a565b5095945050505050565b600081815260016020908152604080832081519283019091525467ffffffffffffffff16908190525b67ffffffffffffffff1692915050565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff8516606082015260009081906108a39061089b9060800160405160208183030381529060405280519060200120611189565b8686866111d7565b90506108c0878288604051806020016040528060008152506111f5565b979650505050505050565b6000818152600160205260408120600281015460ff16156108ef5750600792915050565b6002810154610100900460ff161561090a5750600292915050565b6000610915846107fe565b9050806109645760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964000000604482015260640161078d565b438110610975575060009392505050565b600061098085610e0d565b905043811061099457506001949350505050565b61099d8561120c565b80156109bc575060008581526005602052604090208054600190910154115b156109cc57506004949350505050565b506003949350505050565b6000803390506109f8848285604051806020016040528060008152506111f5565b949350505050565b333014610a4a5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b604482015260640161078d565b610a5381611243565b50565b600080339050610a9e86828787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111f592505050565b9695505050505050565b6000610ab2610dfd565b610ac1336105906001436124bc565b1015610b415760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a2070726f7060448201527f6f73657220766f7465732062656c6f772070726f706f73616c207468726573686064820152621bdb1960ea1b608482015260a40161078d565b6000610b568686868680519060200120610eab565b90508451865114610bb35760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b606482015260840161078d565b8351865114610c0e5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b606482015260840161078d565b6000865111610c5f5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c0000000000000000604482015260640161078d565b6000818152600160209081526040918290208251918201909252815467ffffffffffffffff169081905215610ce05760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b606482015260840161078d565b6000610cf3610cee60025490565b611284565b610cfc43611284565b610d0691906124d3565b90506000610d16610cee60035490565b610d2090836124d3565b835467ffffffffffffffff191667ffffffffffffffff8416178455905060018301805467ffffffffffffffff191667ffffffffffffffff83161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d5167ffffffffffffffff811115610d9b57610d9b611e9b565b604051908082528060200260200182016040528015610dce57816020015b6060815260200190600190039081610db95790505b508c88888e604051610de8999897969594939291906125c8565b60405180910390a15091979650505050505050565b6000610e0860045490565b905090565b600061065482611308565b333014610e625760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b604482015260640161078d565b610ea48483838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611345915050565b5050505050565b600084848484604051602001610ec494939291906126ba565b60408051601f19818403018152919052805160209091012095945050505050565b333014610f2f5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b604482015260640161078d565b610a538161136b565b333014610f825760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b604482015260640161078d565b610a53816113d7565b604051630748d63560e31b81526001600160a01b038381166004830152602482018390526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b158015610ff857600080fd5b505afa15801561100c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110309190612705565b9392505050565b3330146110815760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b604482015260640161078d565b610a538161148e565b60006040518060600160405280602781526020016127ac60279139905060005b8551811015611180576000808783815181106110c8576110c861271e565b60200260200101516001600160a01b03168784815181106110eb576110eb61271e565b60200260200101518785815181106111055761110561271e565b602002602001015160405161111a9190612734565b60006040518083038185875af1925050503d8060008114611157576040519150601f19603f3d011682016040523d82523d6000602084013e61115c565b606091505b509150915061116c8282866114cf565b5050508061117990612750565b90506110aa565b50505050505050565b6000610654611196611508565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006111e88787878761162f565b915091506107f48161171c565b6000611203858585856118d7565b95945050505050565b60008181526005602052604081206002810154600182015461122e919061276b565b61123a6105d0856107fe565b11159392505050565b60025460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600255565b600067ffffffffffffffff8211156113045760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f3420626974730000000000000000000000000000000000000000000000000000606482015260840161078d565b5090565b6000610654611316836119d5565b6000848152600760209081526040918290208251918201909252905467ffffffffffffffff1690819052611a05565b60606109f88484846040518060600160405280602981526020016127d360299139611a1c565b6006546040805167ffffffffffffffff928316815291831660208301527f7ca4ac117ed3cdce75c1161d8207c440389b1a15d69d096831664657c07dafc2910160405180910390a16006805467ffffffffffffffff191667ffffffffffffffff92909216919091179055565b6000811161144d5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f642060448201527f746f6f206c6f7700000000000000000000000000000000000000000000000000606482015260840161078d565b60035460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600355565b60045460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600455565b606083156114de575081611030565b8251156114ee5782518084602001fd5b8160405162461bcd60e51b815260040161078d9190611e88565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561156157507f000000000000000000000000000000000000000000000000000000000000000046145b1561158b57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156116665750600090506003611713565b8460ff16601b1415801561167e57508460ff16601c14155b1561168f5750600090506004611713565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156116e3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661170c57600060019250925050611713565b9150600090505b94509492505050565b6000816004811115611730576117306121e4565b14156117395750565b600181600481111561174d5761174d6121e4565b141561179b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161078d565b60028160048111156117af576117af6121e4565b14156117fd5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161078d565b6003816004811115611811576118116121e4565b141561186a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161078d565b600481600481111561187e5761187e6121e4565b1415610a535760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161078d565b6000806118e686868686611b59565b6000878152600760209081526040918290208251918201909252815467ffffffffffffffff16908190529192509015801561192557506119258761120c565b156107f457600061193f60065467ffffffffffffffff1690565b61194843611284565b61195291906124d3565b905061195d88610e0d565b8167ffffffffffffffff1611156119ae5760405167ffffffffffffffff8216815288907f541f725fb9f7c98a30cc9c0ff32fbb14358cd7159c847a3aa20a2bdc442ba5119060200160405180910390a25b815467ffffffffffffffff191667ffffffffffffffff821617825550509050949350505050565b600081815260016020818152604080842081519283019091529091015467ffffffffffffffff1690819052610827565b600081831015611a155781611030565b5090919050565b606082471015611a945760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161078d565b6001600160a01b0385163b611aeb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161078d565b600080866001600160a01b03168587604051611b079190612734565b60006040518083038185875af1925050503d8060008114611b44576040519150601f19603f3d011682016040523d82523d6000602084013e611b49565b606091505b50915091506108c08282866114cf565b6000848152600160208190526040822090611b73876108cb565b6007811115611b8457611b846121e4565b14611bdd5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b606482015260840161078d565b6040805160208101909152815467ffffffffffffffff1690819052600090611c06908790610f8b565b9050611c1487878784611c65565b856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda488878488604051611c539493929190612783565b60405180910390a29695505050505050565b60008481526005602090815260408083206001600160a01b0387168452600381019092529091205460ff1615611d035760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160448201527f6479206361737400000000000000000000000000000000000000000000000000606482015260840161078d565b6001600160a01b03841660009081526003820160205260408120805460ff1916600117905560ff168360ff161415611d545781816000016000828254611d49919061276b565b90915550610ea49050565b60ff831660011415611d745781816001016000828254611d49919061276b565b60ff831660021415611d945781816002016000828254611d49919061276b565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160448201527f6c756520666f7220656e756d20566f7465547970650000000000000000000000606482015260840161078d565b600060208284031215611e1457600080fd5b81356001600160e01b03198116811461103057600080fd5b60005b83811015611e47578181015183820152602001611e2f565b83811115611e56576000848401525b50505050565b60008151808452611e74816020860160208601611e2c565b601f01601f19169290920160200192915050565b6020815260006110306020830184611e5c565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611eda57611eda611e9b565b604052919050565b600067ffffffffffffffff821115611efc57611efc611e9b565b5060051b60200190565b80356001600160a01b0381168114611f1d57600080fd5b919050565b600082601f830112611f3357600080fd5b81356020611f48611f4383611ee2565b611eb1565b82815260059290921b84018101918181019086841115611f6757600080fd5b8286015b84811015611f8957611f7c81611f06565b8352918301918301611f6b565b509695505050505050565b600082601f830112611fa557600080fd5b81356020611fb5611f4383611ee2565b82815260059290921b84018101918181019086841115611fd457600080fd5b8286015b84811015611f895780358352918301918301611fd8565b600067ffffffffffffffff83111561200957612009611e9b565b61201c601f8401601f1916602001611eb1565b905082815283838301111561203057600080fd5b828260208301376000602084830101529392505050565b600082601f83011261205857600080fd5b81356020612068611f4383611ee2565b82815260059290921b8401810191818101908684111561208757600080fd5b8286015b84811015611f8957803567ffffffffffffffff8111156120ab5760008081fd5b8701603f810189136120bd5760008081fd5b6120ce898683013560408401611fef565b84525091830191830161208b565b600080600080608085870312156120f257600080fd5b843567ffffffffffffffff8082111561210a57600080fd5b61211688838901611f22565b9550602087013591508082111561212c57600080fd5b61213888838901611f94565b9450604087013591508082111561214e57600080fd5b5061215b87828801612047565b949793965093946060013593505050565b60006020828403121561217e57600080fd5b5035919050565b803560ff81168114611f1d57600080fd5b600080600080600060a086880312156121ae57600080fd5b853594506121be60208701612185565b93506121cc60408701612185565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061221c57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561223557600080fd5b8235915061224560208401611f06565b90509250929050565b6000806040838503121561226157600080fd5b8235915061224560208401612185565b60008083601f84011261228357600080fd5b50813567ffffffffffffffff81111561229b57600080fd5b6020830191508360208285010111156122b357600080fd5b9250929050565b600080600080606085870312156122d057600080fd5b843593506122e060208601612185565b9250604085013567ffffffffffffffff8111156122fc57600080fd5b61230887828801612271565b95989497509550505050565b6000806000806080858703121561232a57600080fd5b843567ffffffffffffffff8082111561234257600080fd5b61234e88838901611f22565b9550602087013591508082111561236457600080fd5b61237088838901611f94565b9450604087013591508082111561238657600080fd5b61239288838901612047565b935060608701359150808211156123a857600080fd5b508501601f810187136123ba57600080fd5b6123c987823560208401611fef565b91505092959194509250565b600080600080606085870312156123eb57600080fd5b6123f485611f06565b935060208501359250604085013567ffffffffffffffff8111156122fc57600080fd5b60006020828403121561242957600080fd5b813567ffffffffffffffff8116811461103057600080fd5b6000806040838503121561245457600080fd5b61245d83611f06565b946020939093013593505050565b600181811c9082168061247f57607f821691505b602082108114156124a057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156124ce576124ce6124a6565b500390565b600067ffffffffffffffff8083168185168083038211156124f6576124f66124a6565b01949350505050565b600081518084526020808501945080840160005b838110156125385781516001600160a01b031687529582019590820190600101612513565b509495945050505050565b600081518084526020808501945080840160005b8381101561253857815187529582019590820190600101612557565b600081518084526020808501808196508360051b8101915082860160005b858110156125bb5782840389526125a9848351611e5c565b98850198935090840190600101612591565b5091979650505050505050565b60006101208b835260206001600160a01b038c16818501528160408501526125f28285018c6124ff565b91508382036060850152612606828b612543565b915083820360808501528189518084528284019150828160051b850101838c0160005b8381101561265757601f19878403018552612645838351611e5c565b94860194925090850190600101612629565b505086810360a088015261266b818c612573565b94505050505061268760c084018767ffffffffffffffff169052565b67ffffffffffffffff851660e08401528281036101008401526126aa8185611e5c565b9c9b505050505050505050505050565b6080815260006126cd60808301876124ff565b82810360208401526126df8187612543565b905082810360408401526126f38186612573565b91505082606083015295945050505050565b60006020828403121561271757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60008251612746818460208701611e2c565b9190910192915050565b6000600019821415612764576127646124a6565b5060010190565b6000821982111561277e5761277e6124a6565b500190565b84815260ff84166020820152826040820152608060608201526000610a9e6080830184611e5c56fe476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a164736f6c6343000809000a";

type GovernorPreventLateQuorumMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernorPreventLateQuorumMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernorPreventLateQuorumMock__factory extends ContractFactory {
  constructor(...args: GovernorPreventLateQuorumMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name_: string,
    token_: string,
    votingDelay_: BigNumberish,
    votingPeriod_: BigNumberish,
    quorum_: BigNumberish,
    voteExtension_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernorPreventLateQuorumMock> {
    return super.deploy(
      name_,
      token_,
      votingDelay_,
      votingPeriod_,
      quorum_,
      voteExtension_,
      overrides || {}
    ) as Promise<GovernorPreventLateQuorumMock>;
  }
  getDeployTransaction(
    name_: string,
    token_: string,
    votingDelay_: BigNumberish,
    votingPeriod_: BigNumberish,
    quorum_: BigNumberish,
    voteExtension_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      token_,
      votingDelay_,
      votingPeriod_,
      quorum_,
      voteExtension_,
      overrides || {}
    );
  }
  attach(address: string): GovernorPreventLateQuorumMock {
    return super.attach(address) as GovernorPreventLateQuorumMock;
  }
  connect(signer: Signer): GovernorPreventLateQuorumMock__factory {
    return super.connect(signer) as GovernorPreventLateQuorumMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorPreventLateQuorumMockInterface {
    return new utils.Interface(_abi) as GovernorPreventLateQuorumMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorPreventLateQuorumMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GovernorPreventLateQuorumMock;
  }
}
