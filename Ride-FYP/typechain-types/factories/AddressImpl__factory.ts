/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AddressImpl, AddressImplInterface } from "../AddressImpl";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "CallReturnValue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "functionCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "functionCallWithValue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "functionDelegateCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "functionStaticCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sharedAnswer",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c2e806100206000396000f3fe6080604052600436106100745760003560e01c8063a0b5ffb01161004e578063a0b5ffb0146100f4578063c21d36f314610114578063ee33b7e214610134578063fc40cf731461015457600080fd5b8063162790551461008057806324a084df146100bf5780632a011594146100e157600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100aa61009b3660046108f7565b6001600160a01b03163b151590565b60405190151581526020015b60405180910390f35b3480156100cb57600080fd5b506100df6100da366004610914565b610176565b005b6100df6100ef366004610989565b610184565b34801561010057600080fd5b506100df61010f3660046109e5565b61021b565b34801561012057600080fd5b506100df61012f3660046109e5565b6102af565b34801561014057600080fd5b506100df61014f3660046109e5565b6102f1565b34801561016057600080fd5b50610169610333565b6040516100b69190610a6a565b61018082826103c1565b5050565b60006101c88585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508792506104e4915050565b90507fe518073da644d0626295bee74d5d5c51447a33857c62913bb30f35e2fba3db7c818060200190518101906101ff9190610ab3565b60405161020c9190610a6a565b60405180910390a15050505050565b600061025d8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061051492505050565b90507fe518073da644d0626295bee74d5d5c51447a33857c62913bb30f35e2fba3db7c818060200190518101906102949190610ab3565b6040516102a19190610a6a565b60405180910390a150505050565b600061025d8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061055692505050565b600061025d8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061057b92505050565b6000805461034090610b55565b80601f016020809104026020016040519081016040528092919081815260200182805461036c90610b55565b80156103b95780601f1061038e576101008083540402835291602001916103b9565b820191906000526020600020905b81548152906001019060200180831161039c57829003601f168201915b505050505081565b804710156104165760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610463576040519150601f19603f3d011682016040523d82523d6000602084013e610468565b606091505b50509050806104df5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161040d565b505050565b606061050a848484604051806060016040528060298152602001610bad602991396105a0565b90505b9392505050565b606061050d83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506106e8565b606061050d8383604051806060016040528060258152602001610bd6602591396106f7565b606061050d8383604051806060016040528060278152602001610bfb602791396107d1565b6060824710156106185760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161040d565b6001600160a01b0385163b61066f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161040d565b600080866001600160a01b0316858760405161068b9190610b90565b60006040518083038185875af1925050503d80600081146106c8576040519150601f19603f3d011682016040523d82523d6000602084013e6106cd565b606091505b50915091506106dd8282866108a6565b979650505050505050565b606061050a84846000856105a0565b60606001600160a01b0384163b61075c5760405162461bcd60e51b8152602060048201526024808201527f416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e746044820152631c9858dd60e21b606482015260840161040d565b600080856001600160a01b0316856040516107779190610b90565b600060405180830381855afa9150503d80600081146107b2576040519150601f19603f3d011682016040523d82523d6000602084013e6107b7565b606091505b50915091506107c78282866108a6565b9695505050505050565b60606001600160a01b0384163b6108505760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161040d565b600080856001600160a01b03168560405161086b9190610b90565b600060405180830381855af49150503d80600081146107b2576040519150601f19603f3d011682016040523d82523d6000602084013e6107b7565b606083156108b557508161050d565b8251156108c55782518084602001fd5b8160405162461bcd60e51b815260040161040d9190610a6a565b6001600160a01b03811681146108f457600080fd5b50565b60006020828403121561090957600080fd5b813561050d816108df565b6000806040838503121561092757600080fd5b8235610932816108df565b946020939093013593505050565b60008083601f84011261095257600080fd5b50813567ffffffffffffffff81111561096a57600080fd5b60208301915083602082850101111561098257600080fd5b9250929050565b6000806000806060858703121561099f57600080fd5b84356109aa816108df565b9350602085013567ffffffffffffffff8111156109c657600080fd5b6109d287828801610940565b9598909750949560400135949350505050565b6000806000604084860312156109fa57600080fd5b8335610a05816108df565b9250602084013567ffffffffffffffff811115610a2157600080fd5b610a2d86828701610940565b9497909650939450505050565b60005b83811015610a55578181015183820152602001610a3d565b83811115610a64576000848401525b50505050565b6020815260008251806020840152610a89816040850160208701610a3a565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610ac557600080fd5b815167ffffffffffffffff80821115610add57600080fd5b818401915084601f830112610af157600080fd5b815181811115610b0357610b03610a9d565b604051601f8201601f19908116603f01168101908382118183101715610b2b57610b2b610a9d565b81604052828152876020848701011115610b4457600080fd5b6106dd836020830160208801610a3a565b600181811c90821680610b6957607f821691505b60208210811415610b8a57634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610ba2818460208701610a3a565b919091019291505056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000809000a";

type AddressImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressImpl__factory extends ContractFactory {
  constructor(...args: AddressImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AddressImpl> {
    return super.deploy(overrides || {}) as Promise<AddressImpl>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AddressImpl {
    return super.attach(address) as AddressImpl;
  }
  connect(signer: Signer): AddressImpl__factory {
    return super.connect(signer) as AddressImpl__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressImplInterface {
    return new utils.Interface(_abi) as AddressImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressImpl {
    return new Contract(address, _abi, signerOrProvider) as AddressImpl;
  }
}
