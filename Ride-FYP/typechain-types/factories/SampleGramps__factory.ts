/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SampleGramps, SampleGrampsInterface } from "../SampleGramps";

const _abi = [
  {
    inputs: [],
    name: "gramps",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106a7806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a6c9db6146100515780638129fc1c14610079578063f62d188814610083578063fa39851f14610096575b600080fd5b6000546100649062010000900460ff1681565b60405190151581526020015b60405180910390f35b6100816100ab565b005b610081610091366004610559565b610171565b61009e610234565b604051610070919061060a565b600054610100900460ff166100c65760005460ff16156100ca565b303b155b6101325760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015610154576000805461ffff19166101011790555b61015c6102c2565b801561016e576000805461ff00191690555b50565b600054610100900460ff1661018c5760005460ff1615610190565b303b155b6101f35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610129565b600054610100900460ff16158015610215576000805461ffff19166101011790555b61021e82610337565b8015610230576000805461ff00191690555b5050565b600180546102419061065f565b80601f016020809104026020016040519081016040528092919081815260200182805461026d9061065f565b80156102ba5780601f1061028f576101008083540402835291602001916102ba565b820191906000526020600020905b81548152906001019060200180831161029d57829003601f168201915b505050505081565b600054610100900460ff1661032d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610129565b6103356103b3565b565b600054610100900460ff166103a25760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610129565b6103aa6102c2565b61016e81610431565b600054610100900460ff1661041e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610129565b6000805462ff0000191662010000179055565b600054610100900460ff1661049c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610129565b80516102309060019060208401908280546104b69061065f565b90600052602060002090601f0160209004810192826104d8576000855561051e565b82601f106104f157805160ff191683800117855561051e565b8280016001018555821561051e579182015b8281111561051e578251825591602001919060010190610503565b5061052a92915061052e565b5090565b5b8082111561052a576000815560010161052f565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561056b57600080fd5b813567ffffffffffffffff8082111561058357600080fd5b818401915084601f83011261059757600080fd5b8135818111156105a9576105a9610543565b604051601f8201601f19908116603f011681019083821181831017156105d1576105d1610543565b816040528281528760208487010111156105ea57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156106375785810183015185820160400152820161061b565b81811115610649576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061067357607f821691505b6020821081141561069457634e487b7160e01b600052602260045260246000fd5b5091905056fea164736f6c6343000809000a";

type SampleGrampsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleGrampsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleGramps__factory extends ContractFactory {
  constructor(...args: SampleGrampsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SampleGramps> {
    return super.deploy(overrides || {}) as Promise<SampleGramps>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SampleGramps {
    return super.attach(address) as SampleGramps;
  }
  connect(signer: Signer): SampleGramps__factory {
    return super.connect(signer) as SampleGramps__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleGrampsInterface {
    return new utils.Interface(_abi) as SampleGrampsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SampleGramps {
    return new Contract(address, _abi, signerOrProvider) as SampleGramps;
  }
}
