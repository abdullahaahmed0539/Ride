/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GovernorMock, GovernorMockInterface } from "../GovernorMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "contract IVotes",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "votingDelay_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingPeriod_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quorumNumerator_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposalThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "ProposalThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldQuorumNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "QuorumNumeratorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "VotingDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "VotingPeriodSet",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "cancel",
    outputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "setProposalThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "setVotingDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "setVotingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002f1638038062002f16833981016040819052620000359162000419565b80848484600089806200005c6040805180820190915260018152603160f81b602082015290565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c052610120525050825162000102925060009150602084019062000340565b50620001109050836200014d565b6200011b826200018e565b620001268162000235565b5050506001600160a01b031661014052620001418162000276565b50505050505062000562565b60025460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600255565b60008111620001f45760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b60035460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600355565b60045460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600455565b6064811115620002fb5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401620001eb565b600580549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b8280546200034e9062000525565b90600052602060002090601f016020900481019282620003725760008555620003bd565b82601f106200038d57805160ff1916838001178555620003bd565b82800160010185558215620003bd579182015b82811115620003bd578251825591602001919060010190620003a0565b50620003cb929150620003cf565b5090565b5b80821115620003cb5760008155600101620003d0565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200041457600080fd5b919050565b600080600080600060a086880312156200043257600080fd5b85516001600160401b03808211156200044a57600080fd5b818801915088601f8301126200045f57600080fd5b815181811115620004745762000474620003e6565b604051601f8201601f19908116603f011681019083821181831017156200049f576200049f620003e6565b81604052828152602093508b84848701011115620004bc57600080fd5b600091505b82821015620004e05784820184015181830185015290830190620004c1565b82821115620004f25760008484830101525b985062000504915050888201620003fc565b604089015160608a01516080909a0151989b919a5098979650945050505050565b600181811c908216806200053a57607f821691505b602082108114156200055c57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161294b620005cb6000396000818161061d01528181610d3701526113b6015260006115360152600061158501526000611560015260006114b9015260006114e30152600061150d015261294b6000f3fe6080604052600436106101d15760003560e01c80637b3c71d3116100f7578063c59057e411610095578063eb9019d411610064578063eb9019d4146105ab578063ece40cc1146105cb578063f8ce560a146105eb578063fc0c546a1461060b57600080fd5b8063c59057e4146104f1578063dd4e2ba514610511578063deaaa7cc14610557578063ea0217cf1461058b57600080fd5b8063a7713a70116100d1578063a7713a7014610487578063b58131b01461049c578063c01f9e37146104b1578063c28bc2fa146104d157600080fd5b80637b3c71d3146104335780637d5e81e21461045357806397c3d3341461047357600080fd5b80633bccf4fd1161016f578063544ffc9c1161013e578063544ffc9c1461037457806354fd4d50146103c957806356781388146103f357806370b0f6601461041357600080fd5b80633bccf4fd146102bd5780633e4f49e6146102dd578063438596321461030a578063452115d61461035457600080fd5b806306fdde03116101ab57806306fdde03146102535780632656227d146102755780632d63f693146102885780633932abb1146102a857600080fd5b806301ffc9a7146101df57806302a251a31461021457806306f3f9e61461023357600080fd5b366101da57005b005b600080fd5b3480156101eb57600080fd5b506101ff6101fa366004611f2e565b610657565b60405190151581526020015b60405180910390f35b34801561022057600080fd5b506003545b60405190815260200161020b565b34801561023f57600080fd5b506101d861024e366004611f58565b61068e565b34801561025f57600080fd5b506102686106e9565b60405161020b9190611fcd565b610225610283366004612221565b61077b565b34801561029457600080fd5b506102256102a3366004611f58565b610888565b3480156102b457600080fd5b50600254610225565b3480156102c957600080fd5b506102256102d83660046122c2565b6108c1565b3480156102e957600080fd5b506102fd6102f8366004611f58565b610955565b60405161020b9190612326565b34801561031657600080fd5b506101ff61032536600461234e565b60008281526006602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b34801561036057600080fd5b5061022561036f366004612221565b610a61565b34801561038057600080fd5b506103ae61038f366004611f58565b6000908152600660205260409020805460018201546002909201549092565b6040805193845260208401929092529082015260600161020b565b3480156103d557600080fd5b506040805180820190915260018152603160f81b6020820152610268565b3480156103ff57600080fd5b5061022561040e36600461237a565b610a78565b34801561041f57600080fd5b506101d861042e366004611f58565b610aa1565b34801561043f57600080fd5b5061022561044e3660046123e6565b610af4565b34801561045f57600080fd5b5061022561046e366004612440565b610b46565b34801561047f57600080fd5b506064610225565b34801561049357600080fd5b50600554610225565b3480156104a857600080fd5b50610225610b54565b3480156104bd57600080fd5b506102256104cc366004611f58565b610b64565b3480156104dd57600080fd5b506101d86104ec366004612501565b610b94565b3480156104fd57600080fd5b5061022561050c366004612221565b610c27565b34801561051d57600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610268565b34801561056357600080fd5b506102257f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561059757600080fd5b506101d86105a6366004611f58565b610c61565b3480156105b757600080fd5b506102256105c6366004612543565b610cb4565b3480156105d757600080fd5b506101d86105e6366004611f58565b610cc7565b3480156105f757600080fd5b50610225610606366004611f58565b610d1a565b34801561061757600080fd5b5061063f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161020b565b60006001600160e01b0319821663bf26d89760e01b148061068857506301ffc9a760e01b6001600160e01b03198316145b92915050565b3330146106dd5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064015b60405180910390fd5b6106e681610dcd565b50565b6060600080546106f89061256d565b80601f01602080910402602001604051908101604052809291908181526020018280546107249061256d565b80156107715780601f1061074657610100808354040283529160200191610771565b820191906000526020600020905b81548152906001019060200180831161075457829003601f168201915b5050505050905090565b60008061078a86868686610c27565b9050600061079782610955565b905060048160078111156107ad576107ad612310565b14806107ca575060058160078111156107c8576107c8612310565b145b6108205760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b60648201526084016106d4565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a161087e8288888888610e95565b5095945050505050565b600081815260016020908152604080832081519283019091525467ffffffffffffffff16908190525b67ffffffffffffffff1692915050565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff85166060820152600090819061092d906109259060800160405160208183030381529060405280519060200120610f94565b868686610fe2565b905061094a87828860405180602001604052806000815250611000565b979650505050505050565b6000818152600160205260408120600281015460ff16156109795750600792915050565b6002810154610100900460ff16156109945750600292915050565b600061099f84610888565b9050806109ee5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c20696400000060448201526064016106d4565b4381106109ff575060009392505050565b6000610a0a85610b64565b9050438110610a1e57506001949350505050565b610a278561110c565b8015610a46575060008581526006602052604090208054600190910154115b15610a5657506004949350505050565b506003949350505050565b6000610a6f85858585611143565b95945050505050565b600080339050610a9984828560405180602001604052806000815250611000565b949350505050565b333014610aeb5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016106d4565b6106e681611261565b600080339050610b3c86828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061100092505050565b9695505050505050565b6000610a6f858585856112a2565b6000610b5f60045490565b905090565b600081815260016020818152604080842081519283019091529091015467ffffffffffffffff16908190526108b1565b333014610bde5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016106d4565b610c208483838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506112b0915050565b5050505050565b600084848484604051602001610c409493929190612671565b60408051601f19818403018152919052805160209091012095945050505050565b333014610cab5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016106d4565b6106e6816112d6565b6000610cc0838361138d565b9392505050565b333014610d115760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016106d4565b6106e681611432565b60006064600554604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b158015610d8157600080fd5b505afa158015610d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db991906126bc565b610dc391906126eb565b610688919061270a565b6064811115610e505760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a4016106d4565b600580549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b60006040518060600160405280602781526020016128ef60279139905060005b8551811015610f8b57600080878381518110610ed357610ed361272c565b60200260200101516001600160a01b0316878481518110610ef657610ef661272c565b6020026020010151878581518110610f1057610f1061272c565b6020026020010151604051610f259190612742565b60006040518083038185875af1925050503d8060008114610f62576040519150601f19603f3d011682016040523d82523d6000602084013e610f67565b606091505b5091509150610f77828286611473565b50505080610f849061275e565b9050610eb5565b50505050505050565b6000610688610fa16114ac565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610ff3878787876115d3565b9150915061087e816116c0565b600084815260016020819052604082209061101a87610955565b600781111561102b5761102b612310565b146110845760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b60648201526084016106d4565b6040805160208101909152815467ffffffffffffffff16908190526000906110ad908790610cb4565b90506110bb8787878461187b565b856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4888784886040516110fa9493929190612779565b60405180910390a29695505050505050565b60008181526006602052604081206002810154600182015461112e91906127a1565b61113a61060685610888565b11159392505050565b60008061115286868686610c27565b9050600061115f82610955565b9050600281600781111561117557611175612310565b141580156111955750600681600781111561119257611192612310565b14155b80156111b3575060078160078111156111b0576111b0612310565b14155b6111ff5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a2070726f706f73616c206e6f742061637469766500000060448201526064016106d4565b60008281526001602052604090819020600201805461ff001916610100179055517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c9061124f9084815260200190565b60405180910390a15095945050505050565b60025460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600255565b6000610a6f85858585611a18565b6060610a9984848460405180606001604052806029815260200161291660299139611d6d565b6000811161134c5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f642060448201527f746f6f206c6f770000000000000000000000000000000000000000000000000060648201526084016106d4565b60035460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600355565b604051630748d63560e31b81526001600160a01b038381166004830152602482018390526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b1580156113fa57600080fd5b505afa15801561140e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc091906126bc565b60045460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600455565b60608315611482575081610cc0565b8251156114925782518084602001fd5b8160405162461bcd60e51b81526004016106d49190611fcd565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561150557507f000000000000000000000000000000000000000000000000000000000000000046145b1561152f57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561160a57506000905060036116b7565b8460ff16601b1415801561162257508460ff16601c14155b1561163357506000905060046116b7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611687573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116b0576000600192509250506116b7565b9150600090505b94509492505050565b60008160048111156116d4576116d4612310565b14156116dd5750565b60018160048111156116f1576116f1612310565b141561173f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106d4565b600281600481111561175357611753612310565b14156117a15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106d4565b60038160048111156117b5576117b5612310565b141561180e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106d4565b600481600481111561182257611822612310565b14156106e65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106d4565b60008481526006602090815260408083206001600160a01b0387168452600381019092529091205460ff16156119195760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160448201527f647920636173740000000000000000000000000000000000000000000000000060648201526084016106d4565b6001600160a01b03841660009081526003820160205260408120805460ff1916600117905560ff168360ff16141561196a578181600001600082825461195f91906127a1565b90915550610c209050565b60ff83166001141561198a578181600101600082825461195f91906127a1565b60ff8316600214156119aa578181600201600082825461195f91906127a1565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160448201527f6c756520666f7220656e756d20566f746554797065000000000000000000000060648201526084016106d4565b6000611a22610b54565b611a31336105c66001436127b9565b1015611ab15760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a2070726f7060448201527f6f73657220766f7465732062656c6f772070726f706f73616c207468726573686064820152621bdb1960ea1b608482015260a4016106d4565b6000611ac68686868680519060200120610c27565b90508451865114611b235760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016106d4565b8351865114611b7e5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016106d4565b6000865111611bcf5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c000000000000000060448201526064016106d4565b6000818152600160209081526040918290208251918201909252815467ffffffffffffffff169081905215611c505760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b60648201526084016106d4565b6000611c63611c5e60025490565b611eaa565b611c6c43611eaa565b611c7691906127d0565b90506000611c86611c5e60035490565b611c9090836127d0565b835467ffffffffffffffff191667ffffffffffffffff8416178455905060018301805467ffffffffffffffff191667ffffffffffffffff83161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d5167ffffffffffffffff811115611d0b57611d0b611fe0565b604051908082528060200260200182016040528015611d3e57816020015b6060815260200190600190039081611d295790505b508c88888e604051611d58999897969594939291906127fc565b60405180910390a15091979650505050505050565b606082471015611de55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106d4565b6001600160a01b0385163b611e3c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106d4565b600080866001600160a01b03168587604051611e589190612742565b60006040518083038185875af1925050503d8060008114611e95576040519150601f19603f3d011682016040523d82523d6000602084013e611e9a565b606091505b509150915061094a828286611473565b600067ffffffffffffffff821115611f2a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f342062697473000000000000000000000000000000000000000000000000000060648201526084016106d4565b5090565b600060208284031215611f4057600080fd5b81356001600160e01b031981168114610cc057600080fd5b600060208284031215611f6a57600080fd5b5035919050565b60005b83811015611f8c578181015183820152602001611f74565b83811115611f9b576000848401525b50505050565b60008151808452611fb9816020860160208601611f71565b601f01601f19169290920160200192915050565b602081526000610cc06020830184611fa1565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561201f5761201f611fe0565b604052919050565b600067ffffffffffffffff82111561204157612041611fe0565b5060051b60200190565b80356001600160a01b038116811461206257600080fd5b919050565b600082601f83011261207857600080fd5b8135602061208d61208883612027565b611ff6565b82815260059290921b840181019181810190868411156120ac57600080fd5b8286015b848110156120ce576120c18161204b565b83529183019183016120b0565b509695505050505050565b600082601f8301126120ea57600080fd5b813560206120fa61208883612027565b82815260059290921b8401810191818101908684111561211957600080fd5b8286015b848110156120ce578035835291830191830161211d565b600067ffffffffffffffff83111561214e5761214e611fe0565b612161601f8401601f1916602001611ff6565b905082815283838301111561217557600080fd5b828260208301376000602084830101529392505050565b600082601f83011261219d57600080fd5b813560206121ad61208883612027565b82815260059290921b840181019181810190868411156121cc57600080fd5b8286015b848110156120ce57803567ffffffffffffffff8111156121f05760008081fd5b8701603f810189136122025760008081fd5b612213898683013560408401612134565b8452509183019183016121d0565b6000806000806080858703121561223757600080fd5b843567ffffffffffffffff8082111561224f57600080fd5b61225b88838901612067565b9550602087013591508082111561227157600080fd5b61227d888389016120d9565b9450604087013591508082111561229357600080fd5b506122a08782880161218c565b949793965093946060013593505050565b803560ff8116811461206257600080fd5b600080600080600060a086880312156122da57600080fd5b853594506122ea602087016122b1565b93506122f8604087016122b1565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061234857634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561236157600080fd5b823591506123716020840161204b565b90509250929050565b6000806040838503121561238d57600080fd5b82359150612371602084016122b1565b60008083601f8401126123af57600080fd5b50813567ffffffffffffffff8111156123c757600080fd5b6020830191508360208285010111156123df57600080fd5b9250929050565b600080600080606085870312156123fc57600080fd5b8435935061240c602086016122b1565b9250604085013567ffffffffffffffff81111561242857600080fd5b6124348782880161239d565b95989497509550505050565b6000806000806080858703121561245657600080fd5b843567ffffffffffffffff8082111561246e57600080fd5b61247a88838901612067565b9550602087013591508082111561249057600080fd5b61249c888389016120d9565b945060408701359150808211156124b257600080fd5b6124be8883890161218c565b935060608701359150808211156124d457600080fd5b508501601f810187136124e657600080fd5b6124f587823560208401612134565b91505092959194509250565b6000806000806060858703121561251757600080fd5b6125208561204b565b935060208501359250604085013567ffffffffffffffff81111561242857600080fd5b6000806040838503121561255657600080fd5b61255f8361204b565b946020939093013593505050565b600181811c9082168061258157607f821691505b602082108114156125a257634e487b7160e01b600052602260045260246000fd5b50919050565b600081518084526020808501945080840160005b838110156125e15781516001600160a01b0316875295820195908201906001016125bc565b509495945050505050565b600081518084526020808501945080840160005b838110156125e157815187529582019590820190600101612600565b600081518084526020808501808196508360051b8101915082860160005b85811015612664578284038952612652848351611fa1565b9885019893509084019060010161263a565b5091979650505050505050565b60808152600061268460808301876125a8565b828103602084015261269681876125ec565b905082810360408401526126aa818661261c565b91505082606083015295945050505050565b6000602082840312156126ce57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612705576127056126d5565b500290565b60008261272757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60008251612754818460208701611f71565b9190910192915050565b6000600019821415612772576127726126d5565b5060010190565b84815260ff84166020820152826040820152608060608201526000610b3c6080830184611fa1565b600082198211156127b4576127b46126d5565b500190565b6000828210156127cb576127cb6126d5565b500390565b600067ffffffffffffffff8083168185168083038211156127f3576127f36126d5565b01949350505050565b60006101208b835260206001600160a01b038c16818501528160408501526128268285018c6125a8565b9150838203606085015261283a828b6125ec565b915083820360808501528189518084528284019150828160051b850101838c0160005b8381101561288b57601f19878403018552612879838351611fa1565b9486019492509085019060010161285d565b505086810360a088015261289f818c61261c565b9450505050506128bb60c084018767ffffffffffffffff169052565b67ffffffffffffffff851660e08401528281036101008401526128de8185611fa1565b9c9b50505050505050505050505056fe476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a164736f6c6343000809000a";

type GovernorMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernorMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernorMock__factory extends ContractFactory {
  constructor(...args: GovernorMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name_: string,
    token_: string,
    votingDelay_: BigNumberish,
    votingPeriod_: BigNumberish,
    quorumNumerator_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernorMock> {
    return super.deploy(
      name_,
      token_,
      votingDelay_,
      votingPeriod_,
      quorumNumerator_,
      overrides || {}
    ) as Promise<GovernorMock>;
  }
  getDeployTransaction(
    name_: string,
    token_: string,
    votingDelay_: BigNumberish,
    votingPeriod_: BigNumberish,
    quorumNumerator_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      token_,
      votingDelay_,
      votingPeriod_,
      quorumNumerator_,
      overrides || {}
    );
  }
  attach(address: string): GovernorMock {
    return super.attach(address) as GovernorMock;
  }
  connect(signer: Signer): GovernorMock__factory {
    return super.connect(signer) as GovernorMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorMockInterface {
    return new utils.Interface(_abi) as GovernorMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorMock {
    return new Contract(address, _abi, signerOrProvider) as GovernorMock;
  }
}
