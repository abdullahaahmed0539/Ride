/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DummyImplementation,
  DummyImplementationInterface,
} from "../DummyImplementation";

const _abi = [
  {
    inputs: [],
    name: "get",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_text",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeNonPayable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "initializeNonPayableWithValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializePayable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "initializePayableWithValue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "reverts",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "text",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "values",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061063a806100206000396000f3fe6080604052600436106100bc5760003560e01c80635e383d21116100745780639fba1f9a1161004e5780639fba1f9a146101c5578063d31f8b6b146101cf578063e79f5bee146101ef57600080fd5b80635e383d21146101695780636d4ce63c14610189578063763e2831146101a557600080fd5b80633bccbbc9116100a55780633bccbbc9146101055780633fa4f2451461011a57806354fd4d501461013e57600080fd5b80631f1bd692146100c1578063227367d5146100ec575b600080fd5b3480156100cd57600080fd5b506100d66101fd565b6040516100e391906103fd565b60405180910390f35b3480156100f857600080fd5b50610103600a600055565b005b34801561011157600080fd5b5061010361028b565b34801561012657600080fd5b5061013060005481565b6040519081526020016100e3565b34801561014a57600080fd5b50604080518082019091526002815261563160f01b60208201526100d6565b34801561017557600080fd5b50610130610184366004610452565b6102d7565b34801561019557600080fd5b50604051600181526020016100e3565b3480156101b157600080fd5b506101036101c0366004610452565b600055565b6101036064600055565b3480156101db57600080fd5b506101036101ea366004610532565b6102f8565b6101036101c0366004610452565b6001805461020a906105f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610236906105f2565b80156102835780601f1061025857610100808354040283529160200191610283565b820191906000526020600020905b81548152906001019060200180831161026657829003601f168201915b505050505081565b60405162461bcd60e51b815260206004820152601c60248201527f44756d6d79496d706c656d656e746174696f6e20726576657274656400000000604482015260640160405180910390fd5b600281815481106102e757600080fd5b600091825260209091200154905081565b6000839055815161031090600190602085019061032a565b5080516103249060029060208401906103ae565b50505050565b828054610336906105f2565b90600052602060002090601f016020900481019282610358576000855561039e565b82601f1061037157805160ff191683800117855561039e565b8280016001018555821561039e579182015b8281111561039e578251825591602001919060010190610383565b506103aa9291506103e8565b5090565b82805482825590600052602060002090810192821561039e579160200282018281111561039e578251825591602001919060010190610383565b5b808211156103aa57600081556001016103e9565b600060208083528351808285015260005b8181101561042a5785810183015185820160400152820161040e565b8181111561043c576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561046457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104aa576104aa61046b565b604052919050565b600082601f8301126104c357600080fd5b8135602067ffffffffffffffff8211156104df576104df61046b565b8160051b6104ee828201610481565b928352848101820192828101908785111561050857600080fd5b83870192505b848310156105275782358252918301919083019061050e565b979650505050505050565b60008060006060848603121561054757600080fd5b8335925060208085013567ffffffffffffffff8082111561056757600080fd5b818701915087601f83011261057b57600080fd5b81358181111561058d5761058d61046b565b61059f601f8201601f19168501610481565b81815289858386010111156105b357600080fd5b8185850186830137600091810190940152919350604086013591808311156105da57600080fd5b50506105e8868287016104b2565b9150509250925092565b600181811c9082168061060657607f821691505b6020821081141561062757634e487b7160e01b600052602260045260246000fd5b5091905056fea164736f6c6343000809000a";

type DummyImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyImplementation__factory extends ContractFactory {
  constructor(...args: DummyImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DummyImplementation> {
    return super.deploy(overrides || {}) as Promise<DummyImplementation>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyImplementation {
    return super.attach(address) as DummyImplementation;
  }
  connect(signer: Signer): DummyImplementation__factory {
    return super.connect(signer) as DummyImplementation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyImplementationInterface {
    return new utils.Interface(_abi) as DummyImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyImplementation {
    return new Contract(address, _abi, signerOrProvider) as DummyImplementation;
  }
}
