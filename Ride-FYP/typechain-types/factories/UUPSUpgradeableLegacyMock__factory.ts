/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UUPSUpgradeableLegacyMock,
  UUPSUpgradeableLegacyMockInterface,
} from "../UUPSUpgradeableLegacyMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "current",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051610873610030600039600061016c01526108736000f3fe6080604052600436106100705760003560e01c806352d1902d1161004e57806352d1902d146100bf5780639fa6a6e3146100e6578063d09de08a146100fb578063d826f88f1461011057600080fd5b80632baeceb7146100755780633659cfe61461008c5780634f1ef286146100ac575b600080fd5b34801561008157600080fd5b5061008a610125565b005b34801561009857600080fd5b5061008a6100a73660046106cd565b610131565b61008a6100ba3660046106fe565b61014f565b3480156100cb57600080fd5b506100d461015f565b60405190815260200160405180910390f35b3480156100f257600080fd5b506000546100d4565b34801561010757600080fd5b5061008a610229565b34801561011c57600080fd5b5061008a610237565b61012f6000610240565b565b61014c81604051806020016040528060008152506000610297565b50565b61015b82826000610297565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102045760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084015b60405180910390fd5b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61012f600080546001019055565b61012f60008055565b80548061028f5760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016101fb565b600019019055565b60006102ca7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506102d584610442565b6000835111806102e25750815b156102f3576102f18484610518565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661043b57805460ff191660011781556040516001600160a01b038316602482015261038790869060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16631b2ce7f360e11b179052610518565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b038381169116146104325760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f757274686572207570677261646573000000000000000000000000000000000060648201526084016101fb565b61043b85610544565b5050505050565b6001600160a01b0381163b6104bf5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016101fb565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b606061053d838360405180606001604052806027815260200161084060279139610584565b9392505050565b61054d81610442565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0384163b6106035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016101fb565b600080856001600160a01b03168560405161061e91906107f0565b600060405180830381855af49150503d8060008114610659576040519150601f19603f3d011682016040523d82523d6000602084013e61065e565b606091505b509150915061066e828286610678565b9695505050505050565b6060831561068757508161053d565b8251156106975782518084602001fd5b8160405162461bcd60e51b81526004016101fb919061080c565b80356001600160a01b03811681146106c857600080fd5b919050565b6000602082840312156106df57600080fd5b61053d826106b1565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561071157600080fd5b61071a836106b1565b9150602083013567ffffffffffffffff8082111561073757600080fd5b818501915085601f83011261074b57600080fd5b81358181111561075d5761075d6106e8565b604051601f8201601f19908116603f01168101908382118183101715610785576107856106e8565b8160405282815288602084870101111561079e57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156107db5781810151838201526020016107c3565b838111156107ea576000848401525b50505050565b600082516108028184602087016107c0565b9190910192915050565b602081526000825180602084015261082b8160408501602087016107c0565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c6343000809000a";

type UUPSUpgradeableLegacyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UUPSUpgradeableLegacyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UUPSUpgradeableLegacyMock__factory extends ContractFactory {
  constructor(...args: UUPSUpgradeableLegacyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UUPSUpgradeableLegacyMock> {
    return super.deploy(overrides || {}) as Promise<UUPSUpgradeableLegacyMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UUPSUpgradeableLegacyMock {
    return super.attach(address) as UUPSUpgradeableLegacyMock;
  }
  connect(signer: Signer): UUPSUpgradeableLegacyMock__factory {
    return super.connect(signer) as UUPSUpgradeableLegacyMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UUPSUpgradeableLegacyMockInterface {
    return new utils.Interface(_abi) as UUPSUpgradeableLegacyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSUpgradeableLegacyMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UUPSUpgradeableLegacyMock;
  }
}
