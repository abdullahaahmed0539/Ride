/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyGovernor1, MyGovernor1Interface } from "../MyGovernor1";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVotes",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract TimelockController",
        name: "_timelock",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eta",
        type: "uint256",
      },
    ],
    name: "ProposalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldQuorumNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "QuorumNumeratorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldTimelock",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTimelock",
        type: "address",
      },
    ],
    name: "TimelockChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalEta",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "queue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TimelockController",
        name: "newTimelock",
        type: "address",
      },
    ],
    name: "updateTimelock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200301e3803806200301e833981016040819052620000359162000353565b600482826040518060400160405280600a81526020016926bca3b7bb32b93737b960b11b815250806200006d6200014360201b60201c565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c052610120525050825162000113925060009150602084019062000294565b50620001219050816200015e565b506001600160a01b0316610140526200013a81620001c7565b505050620003cf565b6040805180820190915260018152603160f81b602082015290565b600254604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b60648111156200024f5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a40160405180910390fd5b600480549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b828054620002a29062000392565b90600052602060002090601f016020900481019282620002c6576000855562000311565b82601f10620002e157805160ff191683800117855562000311565b8280016001018555821562000311579182015b8281111562000311578251825591602001919060010190620002f4565b506200031f92915062000323565b5090565b5b808211156200031f576000815560010162000324565b6001600160a01b03811681146200035057600080fd5b50565b600080604083850312156200036757600080fd5b825162000374816200033a565b602084015190925062000387816200033a565b809150509250929050565b600181811c90821680620003a757607f821691505b60208210811415620003c957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161014051612be66200043860003960008181610647015281816116aa01526117430152600061190c0152600061195b015260006119360152600061188f015260006118b9015260006118e30152612be66000f3fe6080604052600436106101d15760003560e01c80637d5e81e2116100f7578063c28bc2fa11610095578063deaaa7cc11610064578063deaaa7cc146105c1578063eb9019d4146105f5578063f8ce560a14610615578063fc0c546a1461063557600080fd5b8063c28bc2fa14610509578063c59057e414610529578063d33219b414610549578063dd4e2ba51461057b57600080fd5b8063a890c910116100d1578063a890c91014610495578063ab58fb8e146104b5578063b58131b0146104d5578063c01f9e37146104e957600080fd5b80637d5e81e21461044c57806397c3d3341461046c578063a7713a701461048057600080fd5b80633932abb11161016f578063544ffc9c1161013e578063544ffc9c1461038d57806354fd4d50146103e2578063567813881461040c5780637b3c71d31461042c57600080fd5b80633932abb1146102e25780633bccf4fd146102f65780633e4f49e614610316578063438596321461034357600080fd5b806306fdde03116101ab57806306fdde031461026d578063160cbed71461028f5780632656227d146102af5780632d63f693146102c257600080fd5b806301ffc9a7146101f957806302a251a31461022e57806306f3f9e61461024d57600080fd5b366101f457306101df610669565b6001600160a01b0316146101f257600080fd5b005b600080fd5b34801561020557600080fd5b5061021961021436600461212b565b610682565b60405190151581526020015b60405180910390f35b34801561023a57600080fd5b5061b2fa5b604051908152602001610225565b34801561025957600080fd5b506101f2610268366004612155565b610693565b34801561027957600080fd5b5061028261070c565b60405161022591906121ca565b34801561029b57600080fd5b5061023f6102aa366004612419565b61079e565b61023f6102bd366004612419565b6109f6565b3480156102ce57600080fd5b5061023f6102dd366004612155565b610b03565b3480156102ee57600080fd5b50600161023f565b34801561030257600080fd5b5061023f6103113660046124bf565b610b3c565b34801561032257600080fd5b50610336610331366004612155565b610bd0565b6040516102259190612523565b34801561034f57600080fd5b5061021961035e36600461254b565b60008281526005602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b34801561039957600080fd5b506103c76103a8366004612155565b6000908152600560205260409020805460018201546002909201549092565b60408051938452602084019290925290820152606001610225565b3480156103ee57600080fd5b506040805180820190915260018152603160f81b6020820152610282565b34801561041857600080fd5b5061023f61042736600461257b565b610bdb565b34801561043857600080fd5b5061023f6104473660046125f0565b610c04565b34801561045857600080fd5b5061023f61046736600461264a565b610c56565b34801561047857600080fd5b50606461023f565b34801561048c57600080fd5b5060045461023f565b3480156104a157600080fd5b506101f26104b036600461270b565b610c6d565b3480156104c157600080fd5b5061023f6104d0366004612155565b610cde565b3480156104e157600080fd5b50600061023f565b3480156104f557600080fd5b5061023f610504366004612155565b610d88565b34801561051557600080fd5b506101f2610524366004612728565b610db8565b34801561053557600080fd5b5061023f610544366004612419565b610e69565b34801561055557600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610225565b34801561058757600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610282565b3480156105cd57600080fd5b5061023f7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561060157600080fd5b5061023f61061036600461276c565b610ea3565b34801561062157600080fd5b5061023f610630366004612155565b610eaf565b34801561064157600080fd5b506105637f000000000000000000000000000000000000000000000000000000000000000081565b600061067d6002546001600160a01b031690565b905090565b600061068d82610eba565b92915050565b61069b610669565b6001600160a01b0316336001600160a01b0316146107005760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e6365000000000000000060448201526064015b60405180910390fd5b61070981610edf565b50565b60606000805461071b90612798565b80601f016020809104026020016040519081016040528092919081815260200182805461074790612798565b80156107945780601f1061076957610100808354040283529160200191610794565b820191906000526020600020905b81548152906001019060200180831161077757829003601f168201915b5050505050905090565b6000806107ad86868686610e69565b905060046107ba82610bd0565b60078111156107cb576107cb61250d565b146108225760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b60648201526084016106f7565b6002546040805163793d064960e11b815290516000926001600160a01b03169163f27a0c92916004808301926020929190829003018186803b15801561086757600080fd5b505afa15801561087b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089f91906127d3565b60025460405163b1c5f42760e01b81529192506001600160a01b03169063b1c5f427906108d9908a908a908a906000908b906004016128b5565b60206040518083038186803b1580156108f157600080fd5b505afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092991906127d3565b6000838152600360205260408082209290925560025491516308f2a0bb60e41b81526001600160a01b0390921691638f2a0bb091610974918b918b918b91908b908990600401612903565b600060405180830381600087803b15801561098e57600080fd5b505af11580156109a2573d6000803e3d6000fd5b505050507f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda28928282426109d49190612971565b6040805192835260208301919091520160405180910390a15095945050505050565b600080610a0586868686610e69565b90506000610a1282610bd0565b90506004816007811115610a2857610a2861250d565b1480610a4557506005816007811115610a4357610a4361250d565b145b610a9b5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b60648201526084016106f7565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a1610af98288888888610fa7565b5095945050505050565b600081815260016020908152604080832081519283019091525467ffffffffffffffff16908190525b67ffffffffffffffff1692915050565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610ba890610ba09060800160405160208183030381529060405280519060200120610fb4565b868686611002565b9050610bc587828860405180602001604052806000815250611020565b979650505050505050565b600061068d8261112c565b600080339050610bfc84828560405180602001604052806000815250611020565b949350505050565b600080339050610c4c86828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102092505050565b9695505050505050565b6000610c6485858585611294565b95945050505050565b610c75610669565b6001600160a01b0316336001600160a01b031614610cd55760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e6365000000000000000060448201526064016106f7565b610709816115da565b60025460008281526003602052604080822054905163d45c443560e01b81526004810191909152909182916001600160a01b039091169063d45c44359060240160206040518083038186803b158015610d3657600080fd5b505afa158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6e91906127d3565b905080600114610d7e5780610d81565b60005b9392505050565b600081815260016020818152604080842081519283019091529091015467ffffffffffffffff1690819052610b2c565b610dc0610669565b6001600160a01b0316336001600160a01b031614610e205760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e6365000000000000000060448201526064016106f7565b610e628483838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525088925061165b915050565b5050505050565b600084848484604051602001610e829493929190612989565b60408051601f19818403018152919052805160209091012095945050505050565b6000610d818383611681565b600061068d82611726565b60006001600160e01b03198216636e665ced60e01b148061068d575061068d826117d9565b6064811115610f625760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a4016106f7565b600480549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b610e62858585858561180e565b600061068d610fc1611882565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611013878787876119a9565b91509150610af981611a96565b600084815260016020819052604082209061103a87610bd0565b600781111561104b5761104b61250d565b146110a45760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b60648201526084016106f7565b6040805160208101909152815467ffffffffffffffff16908190526000906110cd908790610ea3565b90506110db87878784611c51565b856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48887848860405161111a94939291906129d4565b60405180910390a29695505050505050565b60008061113883611dee565b9050600481600781111561114e5761114e61250d565b146111595792915050565b60008381526003602052604090205480611174575092915050565b600254604051632ab0f52960e01b8152600481018390526001600160a01b0390911690632ab0f5299060240160206040518083038186803b1580156111b857600080fd5b505afa1580156111cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f091906129fc565b156111ff575060079392505050565b600254604051632c258a9f60e11b8152600481018390526001600160a01b039091169063584b153e9060240160206040518083038186803b15801561124357600080fd5b505afa158015611257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127b91906129fc565b1561128a575060059392505050565b5060029392505050565b6000806112a633610610600143612a1e565b10156113265760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a2070726f7060448201527f6f73657220766f7465732062656c6f772070726f706f73616c207468726573686064820152621bdb1960ea1b608482015260a4016106f7565b600061133b8686868680519060200120610e69565b905084518651146113985760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016106f7565b83518651146113f35760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016106f7565b60008651116114445760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c000000000000000060448201526064016106f7565b6000818152600160209081526040918290208251918201909252815467ffffffffffffffff1690819052156114c55760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b60648201526084016106f7565b60006114d16001611efa565b6114da43611efa565b6114e49190612a35565b905060006114f361b2fa611efa565b6114fd9083612a35565b835467ffffffffffffffff191667ffffffffffffffff8416178455905060018301805467ffffffffffffffff191667ffffffffffffffff83161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d5167ffffffffffffffff811115611578576115786121dd565b6040519080825280602002602001820160405280156115ab57816020015b60608152602001906001900390816115965790505b508c88888e6040516115c599989796959493929190612a61565b60405180910390a15091979650505050505050565b600254604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060610bfc848484604051806060016040528060298152602001612bb160299139611f7e565b604051630748d63560e31b81526001600160a01b038381166004830152602482018390526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b1580156116ee57600080fd5b505afa158015611702573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8191906127d3565b60006064600454604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b15801561178d57600080fd5b505afa1580156117a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c591906127d3565b6117cf9190612b53565b61068d9190612b72565b60006001600160e01b0319821663bf26d89760e01b148061068d57506301ffc9a760e01b6001600160e01b031983161461068d565b60025460405163e38335e560e01b81526001600160a01b039091169063e38335e59034906118499088908890889060009089906004016128b5565b6000604051808303818588803b15801561186257600080fd5b505af1158015611876573d6000803e3d6000fd5b50505050505050505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156118db57507f000000000000000000000000000000000000000000000000000000000000000046145b1561190557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119e05750600090506003611a8d565b8460ff16601b141580156119f857508460ff16601c14155b15611a095750600090506004611a8d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a5d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a8657600060019250925050611a8d565b9150600090505b94509492505050565b6000816004811115611aaa57611aaa61250d565b1415611ab35750565b6001816004811115611ac757611ac761250d565b1415611b155760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106f7565b6002816004811115611b2957611b2961250d565b1415611b775760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106f7565b6003816004811115611b8b57611b8b61250d565b1415611be45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106f7565b6004816004811115611bf857611bf861250d565b14156107095760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106f7565b60008481526005602090815260408083206001600160a01b0387168452600381019092529091205460ff1615611cef5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160448201527f647920636173740000000000000000000000000000000000000000000000000060648201526084016106f7565b6001600160a01b03841660009081526003820160205260408120805460ff1916600117905560ff168360ff161415611d405781816000016000828254611d359190612971565b90915550610e629050565b60ff831660011415611d605781816001016000828254611d359190612971565b60ff831660021415611d805781816002016000828254611d359190612971565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160448201527f6c756520666f7220656e756d20566f746554797065000000000000000000000060648201526084016106f7565b6000818152600160205260408120600281015460ff1615611e125750600792915050565b6002810154610100900460ff1615611e2d5750600292915050565b6000611e3884610b03565b905080611e875760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c20696400000060448201526064016106f7565b438110611e98575060009392505050565b6000611ea385610d88565b9050438110611eb757506001949350505050565b611ec0856120bb565b8015611edf575060008581526005602052604090208054600190910154115b15611eef57506004949350505050565b506003949350505050565b600067ffffffffffffffff821115611f7a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f342062697473000000000000000000000000000000000000000000000000000060648201526084016106f7565b5090565b606082471015611ff65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106f7565b6001600160a01b0385163b61204d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106f7565b600080866001600160a01b031685876040516120699190612b94565b60006040518083038185875af1925050503d80600081146120a6576040519150601f19603f3d011682016040523d82523d6000602084013e6120ab565b606091505b5091509150610bc58282866120f2565b6000818152600560205260408120600281015460018201546120dd9190612971565b6120e961063085610b03565b11159392505050565b60608315612101575081610d81565b8251156121115782518084602001fd5b8160405162461bcd60e51b81526004016106f791906121ca565b60006020828403121561213d57600080fd5b81356001600160e01b031981168114610d8157600080fd5b60006020828403121561216757600080fd5b5035919050565b60005b83811015612189578181015183820152602001612171565b83811115612198576000848401525b50505050565b600081518084526121b681602086016020860161216e565b601f01601f19169290920160200192915050565b602081526000610d81602083018461219e565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561221c5761221c6121dd565b604052919050565b600067ffffffffffffffff82111561223e5761223e6121dd565b5060051b60200190565b6001600160a01b038116811461070957600080fd5b600082601f83011261226e57600080fd5b8135602061228361227e83612224565b6121f3565b82815260059290921b840181019181810190868411156122a257600080fd5b8286015b848110156122c65780356122b981612248565b83529183019183016122a6565b509695505050505050565b600082601f8301126122e257600080fd5b813560206122f261227e83612224565b82815260059290921b8401810191818101908684111561231157600080fd5b8286015b848110156122c65780358352918301918301612315565b600067ffffffffffffffff831115612346576123466121dd565b612359601f8401601f19166020016121f3565b905082815283838301111561236d57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261239557600080fd5b813560206123a561227e83612224565b82815260059290921b840181019181810190868411156123c457600080fd5b8286015b848110156122c657803567ffffffffffffffff8111156123e85760008081fd5b8701603f810189136123fa5760008081fd5b61240b89868301356040840161232c565b8452509183019183016123c8565b6000806000806080858703121561242f57600080fd5b843567ffffffffffffffff8082111561244757600080fd5b6124538883890161225d565b9550602087013591508082111561246957600080fd5b612475888389016122d1565b9450604087013591508082111561248b57600080fd5b5061249887828801612384565b949793965093946060013593505050565b803560ff811681146124ba57600080fd5b919050565b600080600080600060a086880312156124d757600080fd5b853594506124e7602087016124a9565b93506124f5604087016124a9565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061254557634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561255e57600080fd5b82359150602083013561257081612248565b809150509250929050565b6000806040838503121561258e57600080fd5b8235915061259e602084016124a9565b90509250929050565b60008083601f8401126125b957600080fd5b50813567ffffffffffffffff8111156125d157600080fd5b6020830191508360208285010111156125e957600080fd5b9250929050565b6000806000806060858703121561260657600080fd5b84359350612616602086016124a9565b9250604085013567ffffffffffffffff81111561263257600080fd5b61263e878288016125a7565b95989497509550505050565b6000806000806080858703121561266057600080fd5b843567ffffffffffffffff8082111561267857600080fd5b6126848883890161225d565b9550602087013591508082111561269a57600080fd5b6126a6888389016122d1565b945060408701359150808211156126bc57600080fd5b6126c888838901612384565b935060608701359150808211156126de57600080fd5b508501601f810187136126f057600080fd5b6126ff8782356020840161232c565b91505092959194509250565b60006020828403121561271d57600080fd5b8135610d8181612248565b6000806000806060858703121561273e57600080fd5b843561274981612248565b935060208501359250604085013567ffffffffffffffff81111561263257600080fd5b6000806040838503121561277f57600080fd5b823561278a81612248565b946020939093013593505050565b600181811c908216806127ac57607f821691505b602082108114156127cd57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156127e557600080fd5b5051919050565b600081518084526020808501945080840160005b838110156128255781516001600160a01b031687529582019590820190600101612800565b509495945050505050565b600081518084526020808501945080840160005b8381101561282557815187529582019590820190600101612844565b600081518084526020808501808196508360051b8101915082860160005b858110156128a857828403895261289684835161219e565b9885019893509084019060010161287e565b5091979650505050505050565b60a0815260006128c860a08301886127ec565b82810360208401526128da8188612830565b905082810360408401526128ee8187612860565b60608401959095525050608001529392505050565b60c08152600061291660c08301896127ec565b82810360208401526129288189612830565b9050828103604084015261293c8188612860565b60608401969096525050608081019290925260a0909101529392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156129845761298461295b565b500190565b60808152600061299c60808301876127ec565b82810360208401526129ae8187612830565b905082810360408401526129c28186612860565b91505082606083015295945050505050565b84815260ff84166020820152826040820152608060608201526000610c4c608083018461219e565b600060208284031215612a0e57600080fd5b81518015158114610d8157600080fd5b600082821015612a3057612a3061295b565b500390565b600067ffffffffffffffff808316818516808303821115612a5857612a5861295b565b01949350505050565b60006101208b835260206001600160a01b038c1681850152816040850152612a8b8285018c6127ec565b91508382036060850152612a9f828b612830565b915083820360808501528189518084528284019150828160051b850101838c0160005b83811015612af057601f19878403018552612ade83835161219e565b94860194925090850190600101612ac2565b505086810360a0880152612b04818c612860565b945050505050612b2060c084018767ffffffffffffffff169052565b67ffffffffffffffff851660e0840152828103610100840152612b43818561219e565b9c9b505050505050505050505050565b6000816000190483118215151615612b6d57612b6d61295b565b500290565b600082612b8f57634e487b7160e01b600052601260045260246000fd5b500490565b60008251612ba681846020870161216e565b919091019291505056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a164736f6c6343000809000a";

type MyGovernor1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyGovernor1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyGovernor1__factory extends ContractFactory {
  constructor(...args: MyGovernor1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _token: string,
    _timelock: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyGovernor1> {
    return super.deploy(
      _token,
      _timelock,
      overrides || {}
    ) as Promise<MyGovernor1>;
  }
  getDeployTransaction(
    _token: string,
    _timelock: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _timelock, overrides || {});
  }
  attach(address: string): MyGovernor1 {
    return super.attach(address) as MyGovernor1;
  }
  connect(signer: Signer): MyGovernor1__factory {
    return super.connect(signer) as MyGovernor1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyGovernor1Interface {
    return new utils.Interface(_abi) as MyGovernor1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyGovernor1 {
    return new Contract(address, _abi, signerOrProvider) as MyGovernor1;
  }
}
