/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ClonesMock, ClonesMockInterface } from "../ClonesMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "instance",
        type: "address",
      },
    ],
    name: "NewInstance",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initdata",
        type: "bytes",
      },
    ],
    name: "clone",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "initdata",
        type: "bytes",
      },
    ],
    name: "cloneDeterministic",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "predictDeterministicAddress",
    outputs: [
      {
        internalType: "address",
        name: "predicted",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106df806100206000396000f3fe6080604052600436106100345760003560e01c80630fbe133c14610039578063360d0fad1461004e5780636e9ebc811461008a575b600080fd5b61004c610047366004610557565b61009d565b005b34801561005a57600080fd5b5061006e6100693660046105aa565b6100f3565b6040516001600160a01b03909116815260200160405180910390f35b61004c6100983660046105d4565b610111565b6100ee6100b2846001600160a01b031661012d565b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506101d692505050565b505050565b60006101086001600160a01b03841683610233565b90505b92915050565b6101276100b26001600160a01b038616856102a6565b50505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166101d15760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064015b60405180910390fd5b919050565b8051156101f3576101f16001600160a01b0383168234610346565b505b6040516001600160a01b03831681527f39a773f10839d86923d91d5ce7d6642f2f63a95d850495abb1f162e38aa04ea59060200160405180910390a15050565b6000610108838330604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201527f5af43d82803e903d91602b57fd5bf3ff000000000000000000000000000000006028820152921b6038830152604c8201526037808220606c830152605591012090565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b03811661010b5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064016101c8565b606061036c8484846040518060600160405280602981526020016106aa60299139610376565b90505b9392505050565b6060824710156103ee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016101c8565b6001600160a01b0385163b6104455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101c8565b600080866001600160a01b03168587604051610461919061065a565b60006040518083038185875af1925050503d806000811461049e576040519150601f19603f3d011682016040523d82523d6000602084013e6104a3565b606091505b50915091506104b38282866104be565b979650505050505050565b606083156104cd57508161036f565b8251156104dd5782518084602001fd5b8160405162461bcd60e51b81526004016101c89190610676565b80356001600160a01b03811681146101d157600080fd5b60008083601f84011261052057600080fd5b50813567ffffffffffffffff81111561053857600080fd5b60208301915083602082850101111561055057600080fd5b9250929050565b60008060006040848603121561056c57600080fd5b610575846104f7565b9250602084013567ffffffffffffffff81111561059157600080fd5b61059d8682870161050e565b9497909650939450505050565b600080604083850312156105bd57600080fd5b6105c6836104f7565b946020939093013593505050565b600080600080606085870312156105ea57600080fd5b6105f3856104f7565b935060208501359250604085013567ffffffffffffffff81111561061657600080fd5b6106228782880161050e565b95989497509550505050565b60005b83811015610649578181015183820152602001610631565b838111156101275750506000910152565b6000825161066c81846020870161062e565b9190910192915050565b602081526000825180602084015261069581604085016020870161062e565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a164736f6c6343000809000a";

type ClonesMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClonesMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClonesMock__factory extends ContractFactory {
  constructor(...args: ClonesMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClonesMock> {
    return super.deploy(overrides || {}) as Promise<ClonesMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClonesMock {
    return super.attach(address) as ClonesMock;
  }
  connect(signer: Signer): ClonesMock__factory {
    return super.connect(signer) as ClonesMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClonesMockInterface {
    return new utils.Interface(_abi) as ClonesMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClonesMock {
    return new Contract(address, _abi, signerOrProvider) as ClonesMock;
  }
}
