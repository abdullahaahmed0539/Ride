/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CheckpointsImpl,
  CheckpointsImplInterface,
} from "../CheckpointsImpl";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getAtBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061052f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806352bfe78914610046578063959ac48414610061578063ee1bc75114610089575b600080fd5b61004e61009c565b6040519081526020015b60405180910390f35b61007461006f36600461048c565b6100ad565b60408051928352602083019190915201610058565b61004e61009736600461048c565b6100c3565b60006100a860006100d5565b905090565b6000806100ba8184610131565b91509150915091565b60006100cf8183610257565b92915050565b8054600090801561011e57826100ec6001836104bb565b815481106100fc576100fc6104d2565b60009182526020909120015464010000000090046001600160e01b0316610121565b60005b6001600160e01b03169392505050565b8154600090819081610142866100d5565b90506000821180156101805750438661015c6001856104bb565b8154811061016c5761016c6104d2565b60009182526020909120015463ffffffff16145b156101e05761018e8561036b565b8661019a6001856104bb565b815481106101aa576101aa6104d2565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b0316021790555061024e565b8560000160405180604001604052806101f8436103ee565b63ffffffff16815260200161020c8861036b565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b95939450505050565b60004382106102ad5760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e656460448201526064015b60405180910390fd5b825460005b818110156103125760006102c6828461046a565b9050848660000182815481106102de576102de6104d2565b60009182526020909120015463ffffffff1611156102fe5780925061030c565b6103098160016104e8565b91505b506102b2565b811561035657846103246001846104bb565b81548110610334576103346104d2565b60009182526020909120015464010000000090046001600160e01b0316610359565b60005b6001600160e01b031695945050505050565b60006001600160e01b038211156103ea5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f323420626974730000000000000000000000000000000000000000000000000060648201526084016102a4565b5090565b600063ffffffff8211156103ea5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f322062697473000000000000000000000000000000000000000000000000000060648201526084016102a4565b60006104796002848418610500565b610485908484166104e8565b9392505050565b60006020828403121561049e57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156104cd576104cd6104a5565b500390565b634e487b7160e01b600052603260045260246000fd5b600082198211156104fb576104fb6104a5565b500190565b60008261051d57634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c6343000809000a";

type CheckpointsImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckpointsImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckpointsImpl__factory extends ContractFactory {
  constructor(...args: CheckpointsImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CheckpointsImpl> {
    return super.deploy(overrides || {}) as Promise<CheckpointsImpl>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CheckpointsImpl {
    return super.attach(address) as CheckpointsImpl;
  }
  connect(signer: Signer): CheckpointsImpl__factory {
    return super.connect(signer) as CheckpointsImpl__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckpointsImplInterface {
    return new utils.Interface(_abi) as CheckpointsImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckpointsImpl {
    return new Contract(address, _abi, signerOrProvider) as CheckpointsImpl;
  }
}
