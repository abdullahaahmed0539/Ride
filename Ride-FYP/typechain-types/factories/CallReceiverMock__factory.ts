/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CallReceiverMock,
  CallReceiverMockInterface,
} from "../CallReceiverMock";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "MockFunctionCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "MockFunctionCalledWithArgs",
    type: "event",
  },
  {
    inputs: [],
    name: "mockFunction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionNonPayable",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionOutOfGas",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionRevertsNoReason",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionRevertsReason",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionThrows",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "mockFunctionWithArgs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockFunctionWritesStorage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockStaticFunction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "sharedAnswer",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610535806100206000396000f3fe6080604052600436106100b15760003560e01c8063a793ab4711610069578063c8fc76961161004e578063c8fc769614610120578063fc40cf731461014f578063fdb273251461016457600080fd5b8063a793ab4714610103578063aa04f77e1461010b57600080fd5b80632c81d6381161009a5780632c81d638146100eb5780633bcfaa14146100f35780633e6fec04146100fb57600080fd5b80630c034968146100b65780630f63e42c146100c0575b600080fd5b6100be610177565b005b3480156100cc57600080fd5b506100d56101c3565b6040516100e29190610437565b60405180910390f35b6100be600080fd5b6100be610210565b6100d56101c3565b6100be61021a565b34801561011757600080fd5b506100d5610261565b34801561012c57600080fd5b506040805180820190915260068152650c1e0c4c8ccd60d21b60208201526100d5565b34801561015b57600080fd5b506100d56102b0565b6100d561017236600461048c565b61033e565b60405162461bcd60e51b815260206004820152601b60248201527f43616c6c52656365697665724d6f636b3a20726576657274696e670000000000604482015260640160405180910390fd5b6040516060907f52c66ed6ec9ca819cba26fe2b2650059270d8981b295af300187a964f54a8c2390600090a1506040805180820190915260068152650c1e0c4c8ccd60d21b602082015290565b6102186104ae565b565b60005b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60181905561025a816104c4565b905061021d565b604080518082019091526002808252611a1960f11b602090920191825260609161028e916000919061039e565b50506040805180820190915260068152650c1e0c4c8ccd60d21b602082015290565b600080546102bd906104ed565b80601f01602080910402602001604051908101604052809291908181526020018280546102e9906104ed565b80156103365780601f1061030b57610100808354040283529160200191610336565b820191906000526020600020905b81548152906001019060200180831161031957829003601f168201915b505050505081565b60408051838152602081018390526060917f2b42b3c9af4187c86225f201736204c7597312c830cb5c2537dff6ef24b946ae910160405180910390a1506040805180820190915260068152650c1e0c4c8ccd60d21b602082015292915050565b8280546103aa906104ed565b90600052602060002090601f0160209004810192826103cc5760008555610412565b82601f106103e557805160ff1916838001178555610412565b82800160010185558215610412579182015b828111156104125782518255916020019190600101906103f7565b5061041e929150610422565b5090565b5b8082111561041e5760008155600101610423565b600060208083528351808285015260005b8181101561046457858101830151858201604001528201610448565b81811115610476576000604083870101525b50601f01601f1916929092016040019392505050565b6000806040838503121561049f57600080fd5b50508035926020909101359150565b634e487b7160e01b600052600160045260246000fd5b60006000198214156104e657634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061050157607f821691505b6020821081141561052257634e487b7160e01b600052602260045260246000fd5b5091905056fea164736f6c6343000809000a";

type CallReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CallReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CallReceiverMock__factory extends ContractFactory {
  constructor(...args: CallReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CallReceiverMock> {
    return super.deploy(overrides || {}) as Promise<CallReceiverMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CallReceiverMock {
    return super.attach(address) as CallReceiverMock;
  }
  connect(signer: Signer): CallReceiverMock__factory {
    return super.connect(signer) as CallReceiverMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallReceiverMockInterface {
    return new utils.Interface(_abi) as CallReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallReceiverMock {
    return new Contract(address, _abi, signerOrProvider) as CallReceiverMock;
  }
}
