/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155SupplyMock,
  ERC1155SupplyMockInterface,
} from "../ERC1155SupplyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022d1380380620022d183398101604081905262000034916200011f565b808062000041816200004a565b50505062000238565b80516200005f90600290602084019062000063565b5050565b8280546200007190620001fb565b90600052602060002090601f016020900481019282620000955760008555620000e0565b82601f10620000b057805160ff1916838001178555620000e0565b82800160010185558215620000e0579182015b82811115620000e0578251825591602001919060010190620000c3565b50620000ee929150620000f2565b5090565b5b80821115620000ee5760008155600101620000f3565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b818501915085601f8301126200016057600080fd5b81518181111562000175576200017562000109565b604051601f8201601f19908116603f01168101908382118183101715620001a057620001a062000109565b816040528281528886848701011115620001b957600080fd5b600093505b82841015620001dd5784840186015181850187015292850192620001be565b82841115620001ef5760008684830101525b98975050505050505050565b600181811c908216806200021057607f821691505b602082108114156200023257634e487b7160e01b600052602260045260246000fd5b50919050565b61208980620002486000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80634f558e7911610097578063bd85b03911610066578063bd85b03914610218578063e985e9c514610238578063f242432a14610274578063f5298aca1461028757600080fd5b80634f558e79146101bd5780636b20c454146101df578063731133e9146101f2578063a22cb4651461020557600080fd5b80630e89341c116100d35780630e89341c146101575780631f7fdffa146101775780632eb2c2d61461018a5780634e1273f41461019d57600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806302fe530514610142575b600080fd5b61010c610107366004611789565b61029a565b6040519081526020015b60405180910390f35b61013261012d3660046117c9565b610343565b6040519015158152602001610116565b61015561015036600461188e565b610395565b005b61016a6101653660046118df565b6103a1565b6040516101169190611945565b610155610185366004611a0d565b610435565b610155610198366004611aa6565b610447565b6101b06101ab366004611b50565b6104e9565b6040516101169190611c56565b6101326101cb3660046118df565b600090815260036020526040902054151590565b6101556101ed366004611c69565b610627565b610155610200366004611cdd565b610637565b610155610213366004611d32565b610643565b61010c6102263660046118df565b60009081526003602052604090205490565b610132610246366004611d6e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610155610282366004611da1565b610652565b610155610295366004611e06565b6106ed565b60006001600160a01b03831661031d5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061037457506001600160e01b031982166303a24d0760e21b145b8061038f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b61039e816106f8565b50565b6060600280546103b090611e39565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc90611e39565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b50505050509050919050565b6104418484848461070b565b50505050565b6001600160a01b03851633148061046357506104638533610246565b6104d55760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610314565b6104e285858585856108e0565b5050505050565b606081518351146105625760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610314565b6000835167ffffffffffffffff81111561057e5761057e6117ed565b6040519080825280602002602001820160405280156105a7578160200160208202803683370190505b50905060005b845181101561061f576105f28582815181106105cb576105cb611e74565b60200260200101518583815181106105e5576105e5611e74565b602002602001015161029a565b82828151811061060457610604611e74565b602090810291909101015261061881611ea0565b90506105ad565b509392505050565b610632838383610b4c565b505050565b61044184848484610d93565b61064e338383610ea3565b5050565b6001600160a01b03851633148061066e575061066e8533610246565b6106e05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610314565b6104e28585858585610f98565b610632838383611136565b805161064e9060029060208401906116d4565b6001600160a01b03841661076b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610314565b81518351146107cd5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610314565b336107dd816000878787876112af565b60005b8451811015610878578381815181106107fb576107fb611e74565b602002602001015160008087848151811061081857610818611e74565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546108609190611ebb565b9091555081905061087081611ea0565b9150506107e0565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108c9929190611ed3565b60405180910390a46104e2816000878787876112bd565b81518351146109425760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610314565b6001600160a01b0384166109a65760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610314565b336109b58187878787876112af565b60005b8451811015610ade5760008582815181106109d5576109d5611e74565b6020026020010151905060008583815181106109f3576109f3611e74565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610a865760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610314565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610ac3908490611ebb565b9250508190555050505080610ad790611ea0565b90506109b8565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b2e929190611ed3565b60405180910390a4610b448187878787876112bd565b505050505050565b6001600160a01b038316610bae5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610314565b8051825114610c105760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610314565b6000339050610c33818560008686604051806020016040528060008152506112af565b60005b8351811015610d34576000848281518110610c5357610c53611e74565b602002602001015190506000848381518110610c7157610c71611e74565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610cfd5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610314565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610d2c81611ea0565b915050610c36565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610d85929190611ed3565b60405180910390a450505050565b6001600160a01b038416610df35760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610314565b33610e1381600087610e0488611472565b610e0d88611472565b876112af565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610e43908490611ebb565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46104e2816000878787876114bd565b816001600160a01b0316836001600160a01b03161415610f2b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610314565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610ffc5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610314565b3361100c818787610e0488611472565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156110905760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610314565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906110cd908490611ebb565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461112d8288888888886114bd565b50505050505050565b6001600160a01b0383166111985760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610314565b336111c7818560006111a987611472565b6111b287611472565b604051806020016040528060008152506112af565b6000838152602081815260408083206001600160a01b0388168452909152902054828110156112445760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610314565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b610b448686868686866115c8565b6001600160a01b0384163b15610b445760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906113019089908990889088908890600401611f01565b602060405180830381600087803b15801561131b57600080fd5b505af192505050801561134b575060408051601f3d908101601f1916820190925261134891810190611f5f565b60015b61140157611357611f7c565b806308c379a01415611391575061136c611f98565b806113775750611393565b8060405162461bcd60e51b81526004016103149190611945565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610314565b6001600160e01b0319811663bc197c8160e01b1461112d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610314565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106114ac576114ac611e74565b602090810291909101015292915050565b6001600160a01b0384163b15610b445760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906115019089908990889088908890600401612022565b602060405180830381600087803b15801561151b57600080fd5b505af192505050801561154b575060408051601f3d908101601f1916820190925261154891810190611f5f565b60015b61155757611357611f7c565b6001600160e01b0319811663f23a6e6160e01b1461112d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610314565b6001600160a01b03851661164f5760005b835181101561164d578281815181106115f4576115f4611e74565b60200260200101516003600086848151811061161257611612611e74565b6020026020010151815260200190815260200160002060008282546116379190611ebb565b90915550611646905081611ea0565b90506115d9565b505b6001600160a01b038416610b445760005b835181101561112d5782818151811061167b5761167b611e74565b60200260200101516003600086848151811061169957611699611e74565b6020026020010151815260200190815260200160002060008282546116be9190612065565b909155506116cd905081611ea0565b9050611660565b8280546116e090611e39565b90600052602060002090601f0160209004810192826117025760008555611748565b82601f1061171b57805160ff1916838001178555611748565b82800160010185558215611748579182015b8281111561174857825182559160200191906001019061172d565b50611754929150611758565b5090565b5b808211156117545760008155600101611759565b80356001600160a01b038116811461178457600080fd5b919050565b6000806040838503121561179c57600080fd5b6117a58361176d565b946020939093013593505050565b6001600160e01b03198116811461039e57600080fd5b6000602082840312156117db57600080fd5b81356117e6816117b3565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611829576118296117ed565b6040525050565b600067ffffffffffffffff83111561184a5761184a6117ed565b604051611861601f8501601f191660200182611803565b80915083815284848401111561187657600080fd5b83836020830137600060208583010152509392505050565b6000602082840312156118a057600080fd5b813567ffffffffffffffff8111156118b757600080fd5b8201601f810184136118c857600080fd5b6118d784823560208401611830565b949350505050565b6000602082840312156118f157600080fd5b5035919050565b6000815180845260005b8181101561191e57602081850181015186830182015201611902565b81811115611930576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006117e660208301846118f8565b600067ffffffffffffffff821115611972576119726117ed565b5060051b60200190565b600082601f83011261198d57600080fd5b8135602061199a82611958565b6040516119a78282611803565b83815260059390931b85018201928281019150868411156119c757600080fd5b8286015b848110156119e257803583529183019183016119cb565b509695505050505050565b600082601f8301126119fe57600080fd5b6117e683833560208501611830565b60008060008060808587031215611a2357600080fd5b611a2c8561176d565b9350602085013567ffffffffffffffff80821115611a4957600080fd5b611a558883890161197c565b94506040870135915080821115611a6b57600080fd5b611a778883890161197c565b93506060870135915080821115611a8d57600080fd5b50611a9a878288016119ed565b91505092959194509250565b600080600080600060a08688031215611abe57600080fd5b611ac78661176d565b9450611ad56020870161176d565b9350604086013567ffffffffffffffff80821115611af257600080fd5b611afe89838a0161197c565b94506060880135915080821115611b1457600080fd5b611b2089838a0161197c565b93506080880135915080821115611b3657600080fd5b50611b43888289016119ed565b9150509295509295909350565b60008060408385031215611b6357600080fd5b823567ffffffffffffffff80821115611b7b57600080fd5b818501915085601f830112611b8f57600080fd5b81356020611b9c82611958565b604051611ba98282611803565b83815260059390931b8501820192828101915089841115611bc957600080fd5b948201945b83861015611bee57611bdf8661176d565b82529482019490820190611bce565b96505086013592505080821115611c0457600080fd5b50611c118582860161197c565b9150509250929050565b600081518084526020808501945080840160005b83811015611c4b57815187529582019590820190600101611c2f565b509495945050505050565b6020815260006117e66020830184611c1b565b600080600060608486031215611c7e57600080fd5b611c878461176d565b9250602084013567ffffffffffffffff80821115611ca457600080fd5b611cb08783880161197c565b93506040860135915080821115611cc657600080fd5b50611cd38682870161197c565b9150509250925092565b60008060008060808587031215611cf357600080fd5b611cfc8561176d565b93506020850135925060408501359150606085013567ffffffffffffffff811115611d2657600080fd5b611a9a878288016119ed565b60008060408385031215611d4557600080fd5b611d4e8361176d565b915060208301358015158114611d6357600080fd5b809150509250929050565b60008060408385031215611d8157600080fd5b611d8a8361176d565b9150611d986020840161176d565b90509250929050565b600080600080600060a08688031215611db957600080fd5b611dc28661176d565b9450611dd06020870161176d565b93506040860135925060608601359150608086013567ffffffffffffffff811115611dfa57600080fd5b611b43888289016119ed565b600080600060608486031215611e1b57600080fd5b611e248461176d565b95602085013595506040909401359392505050565b600181811c90821680611e4d57607f821691505b60208210811415611e6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611eb457611eb4611e8a565b5060010190565b60008219821115611ece57611ece611e8a565b500190565b604081526000611ee66040830185611c1b565b8281036020840152611ef88185611c1b565b95945050505050565b60006001600160a01b03808816835280871660208401525060a06040830152611f2d60a0830186611c1b565b8281036060840152611f3f8186611c1b565b90508281036080840152611f5381856118f8565b98975050505050505050565b600060208284031215611f7157600080fd5b81516117e6816117b3565b600060033d1115611f955760046000803e5060005160e01c5b90565b600060443d1015611fa65790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611fd657505050505090565b8285019150815181811115611fee5750505050505090565b843d87010160208285010111156120085750505050505090565b61201760208286010187611803565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261205a60a08301846118f8565b979650505050505050565b60008282101561207757612077611e8a565b50039056fea164736f6c6343000809000a";

type ERC1155SupplyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155SupplyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155SupplyMock__factory extends ContractFactory {
  constructor(...args: ERC1155SupplyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155SupplyMock> {
    return super.deploy(uri, overrides || {}) as Promise<ERC1155SupplyMock>;
  }
  getDeployTransaction(
    uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri, overrides || {});
  }
  attach(address: string): ERC1155SupplyMock {
    return super.attach(address) as ERC1155SupplyMock;
  }
  connect(signer: Signer): ERC1155SupplyMock__factory {
    return super.connect(signer) as ERC1155SupplyMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155SupplyMockInterface {
    return new utils.Interface(_abi) as ERC1155SupplyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155SupplyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155SupplyMock;
  }
}
