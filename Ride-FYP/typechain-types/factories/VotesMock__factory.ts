/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VotesMock, VotesMockInterface } from "../VotesMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "newDelegation",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "voteId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620013773803806200137783398101604081905262000035916200010f565b60408051808201825260018152603160f81b60209182015282519281019290922060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a081815284517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818701959095526060810193909352608080840192909252308382018190528551808503909201825260c09384019095528051950194909420909352915261012052620001eb565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200012357600080fd5b82516001600160401b03808211156200013b57600080fd5b818501915085601f8301126200015057600080fd5b815181811115620001655762000165620000f9565b604051601f8201601f19908116603f01168101908382118183101715620001905762000190620000f9565b816040528281528886848701011115620001a957600080fd5b600093505b82841015620001cd5784840186015181850187015292850192620001ae565b82841115620001df5760008684830101525b98975050505050505050565b60805160a05160c05160e051610100516101205161113c6200023b600039600061058d015260006105dc015260006105b7015260006105100152600061053a01526000610564015261113c6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80635c19a95c1161008c5780638e539e8c116100665780638e539e8c146101b95780639ab24eb0146101cc578063c3cda520146101df578063c4e41b22146101f257600080fd5b80635c19a95c146101805780637ecebe00146101935780638ab65686146101a657600080fd5b806340c10f19116100bd57806340c10f191461011457806342966c6814610129578063587cde1e1461013c57600080fd5b80633408e470146100e45780633644e515146100f95780633a46b1a814610101575b600080fd5b465b6040519081526020015b60405180910390f35b6100e66101fa565b6100e661010f366004610fab565b610209565b610127610122366004610fab565b610232565b005b610127610137366004610fd5565b6102a4565b61016861014a366004610fee565b6001600160a01b039081166000908152602081905260409020541690565b6040516001600160a01b0390911681526020016100f0565b61012761018e366004610fee565b6102ee565b6100e66101a1366004610fee565b6102f9565b6101276101b4366004611009565b610319565b6100e66101c7366004610fd5565b610323565b6100e66101da366004610fee565b610384565b6101276101ed36600461103c565b6103a5565b6100e66104f9565b6000610204610503565b905090565b6001600160a01b038216600090815260016020526040812061022b908361062a565b9392505050565b6001600160a01b038216600090815260046020526040812080546001929061025b9084906110b2565b90915550506000818152600560205260408120805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385161790556102a090836001610739565b5050565b6000818152600560209081526040808320546001600160a01b031680845260049092528220805491926001926102db9084906110ca565b909155506102a090508160006001610739565b336102a081836107ae565b6001600160a01b0381166000908152600360205260408120545b92915050565b6102a082826107ae565b60004382106103795760405162461bcd60e51b815260206004820152601a60248201527f566f7465733a20626c6f636b206e6f7420796574206d696e656400000000000060448201526064015b60405180910390fd5b61031360028361062a565b6001600160a01b038116600090815260016020526040812061031390610843565b834211156103f55760405162461bcd60e51b815260206004820152601860248201527f566f7465733a207369676e6174757265206578706972656400000000000000006044820152606401610370565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009061046f906104679060a0016040516020818303038152906040528051906020012061089f565b8585856108ed565b9050610498816001600160a01b0316600090815260036020526040902080546001810190915590565b86146104e65760405162461bcd60e51b815260206004820152601460248201527f566f7465733a20696e76616c6964206e6f6e63650000000000000000000000006044820152606401610370565b6104f081886107ae565b50505050505050565b6000610204610915565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561055c57507f000000000000000000000000000000000000000000000000000000000000000046145b1561058657507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600043821061067b5760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610370565b825460005b818110156106e05760006106948284610921565b9050848660000182815481106106ac576106ac6110e1565b60009182526020909120015463ffffffff1611156106cc578092506106da565b6106d78160016110b2565b91505b50610680565b811561072457846106f26001846110ca565b81548110610702576107026110e1565b60009182526020909120015464010000000090046001600160e01b0316610727565b60005b6001600160e01b031695945050505050565b6001600160a01b03831661075857610755600261093c83610948565b50505b6001600160a01b03821661077757610774600261097683610948565b50505b6001600160a01b038381166000908152602081905260408082205485841683529120546107a992918216911683610982565b505050565b6001600160a01b03828116600081815260208190526040808220805486861673ffffffffffffffffffffffffffffffffffffffff19821681179092559151919094169392849290917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46107a9818361083e866001600160a01b031660009081526004602052604090205490565b610982565b8054600090801561088c578261085a6001836110ca565b8154811061086a5761086a6110e1565b60009182526020909120015464010000000090046001600160e01b031661088f565b60005b6001600160e01b03169392505050565b60006103136108ac610503565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006108fe87878787610abf565b9150915061090b81610bac565b5095945050505050565b60006102046002610843565b600061093060028484186110f7565b61022b908484166110b2565b600061022b82846110b2565b60008061096a8561096561095b88610843565b868863ffffffff16565b610d6a565b91509150935093915050565b600061022b82846110ca565b816001600160a01b0316836001600160a01b0316141580156109a45750600081115b156107a9576001600160a01b03831615610a32576001600160a01b038316600090815260016020526040812081906109df9061097685610948565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051610a27929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156107a9576001600160a01b03821660009081526001602052604081208190610a689061093c85610948565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051610ab0929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610af65750600090506003610ba3565b8460ff16601b14158015610b0e57508460ff16601c14155b15610b1f5750600090506004610ba3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610b73573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b9c57600060019250925050610ba3565b9150600090505b94509492505050565b6000816004811115610bc057610bc0611119565b1415610bc95750565b6001816004811115610bdd57610bdd611119565b1415610c2b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610370565b6002816004811115610c3f57610c3f611119565b1415610c8d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610370565b6003816004811115610ca157610ca1611119565b1415610cfa5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610370565b6004816004811115610d0e57610d0e611119565b1415610d675760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610370565b50565b8154600090819081610d7b86610843565b9050600082118015610db957504386610d956001856110ca565b81548110610da557610da56110e1565b60009182526020909120015463ffffffff16145b15610e1957610dc785610e90565b86610dd36001856110ca565b81548110610de357610de36110e1565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550610e87565b856000016040518060400160405280610e3143610f13565b63ffffffff168152602001610e4588610e90565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b95939450505050565b60006001600160e01b03821115610f0f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610370565b5090565b600063ffffffff821115610f0f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610370565b80356001600160a01b0381168114610fa657600080fd5b919050565b60008060408385031215610fbe57600080fd5b610fc783610f8f565b946020939093013593505050565b600060208284031215610fe757600080fd5b5035919050565b60006020828403121561100057600080fd5b61022b82610f8f565b6000806040838503121561101c57600080fd5b61102583610f8f565b915061103360208401610f8f565b90509250929050565b60008060008060008060c0878903121561105557600080fd5b61105e87610f8f565b95506020870135945060408701359350606087013560ff8116811461108257600080fd5b9598949750929560808101359460a0909101359350915050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110c5576110c561109c565b500190565b6000828210156110dc576110dc61109c565b500390565b634e487b7160e01b600052603260045260246000fd5b60008261111457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000809000a";

type VotesMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotesMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotesMock__factory extends ContractFactory {
  constructor(...args: VotesMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VotesMock> {
    return super.deploy(name, overrides || {}) as Promise<VotesMock>;
  }
  getDeployTransaction(
    name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, overrides || {});
  }
  attach(address: string): VotesMock {
    return super.attach(address) as VotesMock;
  }
  connect(signer: Signer): VotesMock__factory {
    return super.connect(signer) as VotesMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotesMockInterface {
    return new utils.Interface(_abi) as VotesMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotesMock {
    return new Contract(address, _abi, signerOrProvider) as VotesMock;
  }
}
