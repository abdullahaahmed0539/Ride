/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccessControlMock,
  AccessControlMockInterface,
} from "../AccessControlMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "senderProtected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "adminRoleId",
        type: "bytes32",
      },
    ],
    name: "setRoleAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001c600033610021565b6100cd565b61002b828261002f565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661002b576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100893390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610887806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806336568abe1161007657806391d148541161005b57806391d148541461014f578063a217fddf14610186578063d547741f1461018e57600080fd5b806336568abe146101295780634b9304a41461013c57600080fd5b806301ffc9a7146100a85780631e4e0091146100d0578063248a9ca3146100e55780632f2ff15d14610116575b600080fd5b6100bb6100b6366004610665565b6101a1565b60405190151581526020015b60405180910390f35b6100e36100de36600461068f565b6101d8565b005b6101086100f33660046106b1565b60009081526020819052604090206001015490565b6040519081526020016100c7565b6100e36101243660046106ca565b6101e6565b6100e36101373660046106ca565b610211565b6100e361014a3660046106b1565b61029e565b6100bb61015d3660046106ca565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610108600081565b6100e361019c3660046106ca565b6102a9565b60006001600160e01b03198216637965db0b60e01b14806101d257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6101e282826102cf565b5050565b600082815260208190526040902060010154610202813361031a565b61020c8383610398565b505050565b6001600160a01b03811633146102945760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6101e28282610436565b806101e2813361031a565b6000828152602081905260409020600101546102c5813361031a565b61020c8383610436565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166101e257610356816001600160a01b031660146104b5565b6103618360206104b5565b604051602001610372929190610736565b60408051601f198184030181529082905262461bcd60e51b825261028b916004016107b7565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166101e2576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556103f23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16156101e2576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006104c4836002610800565b6104cf90600261081f565b67ffffffffffffffff8111156104e7576104e7610837565b6040519080825280601f01601f191660200182016040528015610511576020820181803683370190505b509050600360fc1b8160008151811061052c5761052c61084d565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061055b5761055b61084d565b60200101906001600160f81b031916908160001a905350600061057f846002610800565b61058a90600161081f565b90505b600181111561060f577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106105cb576105cb61084d565b1a60f81b8282815181106105e1576105e161084d565b60200101906001600160f81b031916908160001a90535060049490941c9361060881610863565b905061058d565b50831561065e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161028b565b9392505050565b60006020828403121561067757600080fd5b81356001600160e01b03198116811461065e57600080fd5b600080604083850312156106a257600080fd5b50508035926020909101359150565b6000602082840312156106c357600080fd5b5035919050565b600080604083850312156106dd57600080fd5b8235915060208301356001600160a01b03811681146106fb57600080fd5b809150509250929050565b60005b83811015610721578181015183820152602001610709565b83811115610730576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161076e816017850160208801610706565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516107ab816028840160208801610706565b01602801949350505050565b60208152600082518060208401526107d6816040850160208701610706565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561081a5761081a6107ea565b500290565b60008219821115610832576108326107ea565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610872576108726107ea565b50600019019056fea164736f6c6343000809000a";

type AccessControlMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControlMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessControlMock__factory extends ContractFactory {
  constructor(...args: AccessControlMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccessControlMock> {
    return super.deploy(overrides || {}) as Promise<AccessControlMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccessControlMock {
    return super.attach(address) as AccessControlMock;
  }
  connect(signer: Signer): AccessControlMock__factory {
    return super.connect(signer) as AccessControlMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlMockInterface {
    return new utils.Interface(_abi) as AccessControlMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlMock {
    return new Contract(address, _abi, signerOrProvider) as AccessControlMock;
  }
}
