/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernorCompMock,
  GovernorCompMockInterface,
} from "../GovernorCompMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "contract ERC20VotesComp",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "cancel",
    outputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC20VotesComp",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002791380380620027918339810160408190526200003591620001ee565b808280620000576040805180820190915260018152603160f81b602082015290565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c0526101205250508251620000fd925060009150602084019062000115565b50506001600160a01b031661014052506200031c9050565b8280546200012390620002df565b90600052602060002090601f01602090048101928262000147576000855562000192565b82601f106200016257805160ff191683800117855562000192565b8280016001018555821562000192579182015b828111156200019257825182559160200191906001019062000175565b50620001a0929150620001a4565b5090565b5b80821115620001a05760008155600101620001a5565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001e957600080fd5b919050565b600080604083850312156200020257600080fd5b82516001600160401b03808211156200021a57600080fd5b818501915085601f8301126200022f57600080fd5b815181811115620002445762000244620001bb565b604051601f8201601f19908116603f011681019083821181831017156200026f576200026f620001bb565b816040528281526020935088848487010111156200028c57600080fd5b600091505b82821015620002b0578482018401518183018501529083019062000291565b82821115620002c25760008484830101525b9550620002d4915050858201620001d1565b925050509250929050565b600181811c90821680620002f457607f821691505b602082108114156200031657634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051610140516124136200037e6000396000818161053501526112af01526000611403015260006114520152600061142d01526000611386015260006113b0015260006113da01526124136000f3fe60806040526004361061018f5760003560e01c806356781388116100d6578063c59057e41161007f578063eb9019d411610059578063eb9019d4146104e2578063f8ce560a14610502578063fc0c546a1461052357600080fd5b8063c59057e414610448578063dd4e2ba514610468578063deaaa7cc146104ae57600080fd5b8063b58131b0116100b0578063b58131b0146103f4578063c01f9e3714610408578063c28bc2fa1461042857600080fd5b806356781388146103945780637b3c71d3146103b45780637d5e81e2146103d457600080fd5b80633bccf4fd11610138578063452115d611610112578063452115d6146102f0578063544ffc9c1461031057806354fd4d501461036a57600080fd5b80633bccf4fd146102595780633e4f49e61461027957806343859632146102a657600080fd5b80632656227d116101695780632656227d146102125780632d63f693146102255780633932abb11461024557600080fd5b806301ffc9a71461019d57806302a251a3146101d257806306fdde03146101f057600080fd5b3661019857005b005b600080fd5b3480156101a957600080fd5b506101bd6101b8366004611a25565b61056f565b60405190151581526020015b60405180910390f35b3480156101de57600080fd5b5060105b6040519081526020016101c9565b3480156101fc57600080fd5b506102056105a6565b6040516101c99190611aab565b6101e2610220366004611cff565b610638565b34801561023157600080fd5b506101e2610240366004611d8f565b61074a565b34801561025157600080fd5b5060046101e2565b34801561026557600080fd5b506101e2610274366004611db9565b610783565b34801561028557600080fd5b50610299610294366004611d8f565b610817565b6040516101c99190611e1d565b3480156102b257600080fd5b506101bd6102c1366004611e45565b60008281526002602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b3480156102fc57600080fd5b506101e261030b366004611cff565b610923565b34801561031c57600080fd5b5061034f61032b366004611d8f565b60008181526002602081905260409091208054600182015491909201549193909250565b604080519384526020840192909252908201526060016101c9565b34801561037657600080fd5b506040805180820190915260018152603160f81b6020820152610205565b3480156103a057600080fd5b506101e26103af366004611e71565b61093a565b3480156103c057600080fd5b506101e26103cf366004611edd565b610963565b3480156103e057600080fd5b506101e26103ef366004611f37565b6109b5565b34801561040057600080fd5b5060006101e2565b34801561041457600080fd5b506101e2610423366004611d8f565b610cfa565b34801561043457600080fd5b50610196610443366004611ff8565b610d2a565b34801561045457600080fd5b506101e2610463366004611cff565b610dc2565b34801561047457600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610205565b3480156104ba57600080fd5b506101e27f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b3480156104ee57600080fd5b506101e26104fd36600461203a565b610dfc565b34801561050e57600080fd5b506101e261051d366004611d8f565b50600090565b34801561052f57600080fd5b506105577f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c9565b60006001600160e01b0319821663bf26d89760e01b14806105a057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546105b590612064565b80601f01602080910402602001604051908101604052809291908181526020018280546105e190612064565b801561062e5780601f106106035761010080835404028352916020019161062e565b820191906000526020600020905b81548152906001019060200180831161061157829003601f168201915b5050505050905090565b60008061064786868686610dc2565b9050600061065482610817565b9050600481600781111561066a5761066a611e07565b14806106875750600581600781111561068557610685611e07565b145b6106e25760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b60648201526084015b60405180910390fd5b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a16107408288888888610e0f565b5095945050505050565b600081815260016020908152604080832081519283019091525467ffffffffffffffff16908190525b67ffffffffffffffff1692915050565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff8516606082015260009081906107ef906107e79060800160405160208183030381529060405280519060200120610f0e565b868686610f5c565b905061080c87828860405180602001604052806000815250610f7a565b979650505050505050565b6000818152600160205260408120600281015460ff161561083b5750600792915050565b6002810154610100900460ff16156108565750600292915050565b60006108618461074a565b9050806108b05760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c20696400000060448201526064016106d9565b4381106108c1575060009392505050565b60006108cc85610cfa565b90504381106108e057506001949350505050565b6108e985611086565b8015610908575060008581526002602052604090208054600190910154115b1561091857506004949350505050565b506003949350505050565b6000610931858585856110be565b95945050505050565b60008033905061095b84828560405180602001604052806000815250610f7a565b949350505050565b6000803390506109ab86828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f7a92505050565b9695505050505050565b6000806109c7336104fd6001436120b5565b1015610a475760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a2070726f7060448201527f6f73657220766f7465732062656c6f772070726f706f73616c207468726573686064820152621bdb1960ea1b608482015260a4016106d9565b6000610a5c8686868680519060200120610dc2565b90508451865114610ab95760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016106d9565b8351865114610b145760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016106d9565b6000865111610b655760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c000000000000000060448201526064016106d9565b6000818152600160209081526040918290208251918201909252815467ffffffffffffffff169081905215610be65760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b60648201526084016106d9565b6000610bf260046111dc565b610bfb436111dc565b610c0591906120cc565b90506000610c1360106111dc565b610c1d90836120cc565b835467ffffffffffffffff191667ffffffffffffffff8416178455905060018301805467ffffffffffffffff191667ffffffffffffffff83161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d5167ffffffffffffffff811115610c9857610c98611abe565b604051908082528060200260200182016040528015610ccb57816020015b6060815260200190600190039081610cb65790505b508c88888e604051610ce5999897969594939291906121be565b60405180910390a15091979650505050505050565b600081815260016020818152604080842081519283019091529091015467ffffffffffffffff1690819052610773565b333014610d795760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e6365000000000000000060448201526064016106d9565b610dbb8483838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611260915050565b5050505050565b600084848484604051602001610ddb94939291906122b0565b60408051601f19818403018152919052805160209091012095945050505050565b6000610e088383611286565b9392505050565b60006040518060600160405280602781526020016123b760279139905060005b8551811015610f0557600080878381518110610e4d57610e4d6122fb565b60200260200101516001600160a01b0316878481518110610e7057610e706122fb565b6020026020010151878581518110610e8a57610e8a6122fb565b6020026020010151604051610e9f9190612311565b60006040518083038185875af1925050503d8060008114610edc576040519150601f19603f3d011682016040523d82523d6000602084013e610ee1565b606091505b5091509150610ef1828286611340565b50505080610efe9061232d565b9050610e2f565b50505050505050565b60006105a0610f1b611379565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610f6d878787876114a0565b915091506107408161158d565b6000848152600160208190526040822090610f9487610817565b6007811115610fa557610fa5611e07565b14610ffe5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b60648201526084016106d9565b6040805160208101909152815467ffffffffffffffff1690819052600090611027908790610dfc565b90506110358787878461174b565b856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4888784886040516110749493929190612348565b60405180910390a29695505050505050565b600081815260026020819052604082209081015460018201546110a99190612370565b6110b561051d8561074a565b11159392505050565b6000806110cd86868686610dc2565b905060006110da82610817565b905060028160078111156110f0576110f0611e07565b141580156111105750600681600781111561110d5761110d611e07565b14155b801561112e5750600781600781111561112b5761112b611e07565b14155b61117a5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a2070726f706f73616c206e6f742061637469766500000060448201526064016106d9565b60008281526001602052604090819020600201805461ff001916610100179055517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c906111ca9084815260200190565b60405180910390a15095945050505050565b600067ffffffffffffffff82111561125c5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f342062697473000000000000000000000000000000000000000000000000000060648201526084016106d9565b5090565b606061095b8484846040518060600160405280602981526020016123de602991396118e8565b60405163782d6fe160e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063782d6fe19060440160206040518083038186803b1580156112f357600080fd5b505afa158015611307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132b9190612388565b6bffffffffffffffffffffffff169392505050565b6060831561134f575081610e08565b82511561135f5782518084602001fd5b8160405162461bcd60e51b81526004016106d99190611aab565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156113d257507f000000000000000000000000000000000000000000000000000000000000000046145b156113fc57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156114d75750600090506003611584565b8460ff16601b141580156114ef57508460ff16601c14155b156115005750600090506004611584565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611554573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661157d57600060019250925050611584565b9150600090505b94509492505050565b60008160048111156115a1576115a1611e07565b14156115aa5750565b60018160048111156115be576115be611e07565b141561160c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106d9565b600281600481111561162057611620611e07565b141561166e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106d9565b600381600481111561168257611682611e07565b14156116db5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106d9565b60048160048111156116ef576116ef611e07565b14156117485760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106d9565b50565b60008481526002602090815260408083206001600160a01b0387168452600381019092529091205460ff16156117e95760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160448201527f647920636173740000000000000000000000000000000000000000000000000060648201526084016106d9565b6001600160a01b03841660009081526003820160205260408120805460ff1916600117905560ff168360ff16141561183a578181600001600082825461182f9190612370565b90915550610dbb9050565b60ff83166001141561185a578181600101600082825461182f9190612370565b60ff83166002141561187a578181600201600082825461182f9190612370565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160448201527f6c756520666f7220656e756d20566f746554797065000000000000000000000060648201526084016106d9565b6060824710156119605760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106d9565b6001600160a01b0385163b6119b75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106d9565b600080866001600160a01b031685876040516119d39190612311565b60006040518083038185875af1925050503d8060008114611a10576040519150601f19603f3d011682016040523d82523d6000602084013e611a15565b606091505b509150915061080c828286611340565b600060208284031215611a3757600080fd5b81356001600160e01b031981168114610e0857600080fd5b60005b83811015611a6a578181015183820152602001611a52565b83811115611a79576000848401525b50505050565b60008151808452611a97816020860160208601611a4f565b601f01601f19169290920160200192915050565b602081526000610e086020830184611a7f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611afd57611afd611abe565b604052919050565b600067ffffffffffffffff821115611b1f57611b1f611abe565b5060051b60200190565b80356001600160a01b0381168114611b4057600080fd5b919050565b600082601f830112611b5657600080fd5b81356020611b6b611b6683611b05565b611ad4565b82815260059290921b84018101918181019086841115611b8a57600080fd5b8286015b84811015611bac57611b9f81611b29565b8352918301918301611b8e565b509695505050505050565b600082601f830112611bc857600080fd5b81356020611bd8611b6683611b05565b82815260059290921b84018101918181019086841115611bf757600080fd5b8286015b84811015611bac5780358352918301918301611bfb565b600067ffffffffffffffff831115611c2c57611c2c611abe565b611c3f601f8401601f1916602001611ad4565b9050828152838383011115611c5357600080fd5b828260208301376000602084830101529392505050565b600082601f830112611c7b57600080fd5b81356020611c8b611b6683611b05565b82815260059290921b84018101918181019086841115611caa57600080fd5b8286015b84811015611bac57803567ffffffffffffffff811115611cce5760008081fd5b8701603f81018913611ce05760008081fd5b611cf1898683013560408401611c12565b845250918301918301611cae565b60008060008060808587031215611d1557600080fd5b843567ffffffffffffffff80821115611d2d57600080fd5b611d3988838901611b45565b95506020870135915080821115611d4f57600080fd5b611d5b88838901611bb7565b94506040870135915080821115611d7157600080fd5b50611d7e87828801611c6a565b949793965093946060013593505050565b600060208284031215611da157600080fd5b5035919050565b803560ff81168114611b4057600080fd5b600080600080600060a08688031215611dd157600080fd5b85359450611de160208701611da8565b9350611def60408701611da8565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b6020810160088310611e3f57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215611e5857600080fd5b82359150611e6860208401611b29565b90509250929050565b60008060408385031215611e8457600080fd5b82359150611e6860208401611da8565b60008083601f840112611ea657600080fd5b50813567ffffffffffffffff811115611ebe57600080fd5b602083019150836020828501011115611ed657600080fd5b9250929050565b60008060008060608587031215611ef357600080fd5b84359350611f0360208601611da8565b9250604085013567ffffffffffffffff811115611f1f57600080fd5b611f2b87828801611e94565b95989497509550505050565b60008060008060808587031215611f4d57600080fd5b843567ffffffffffffffff80821115611f6557600080fd5b611f7188838901611b45565b95506020870135915080821115611f8757600080fd5b611f9388838901611bb7565b94506040870135915080821115611fa957600080fd5b611fb588838901611c6a565b93506060870135915080821115611fcb57600080fd5b508501601f81018713611fdd57600080fd5b611fec87823560208401611c12565b91505092959194509250565b6000806000806060858703121561200e57600080fd5b61201785611b29565b935060208501359250604085013567ffffffffffffffff811115611f1f57600080fd5b6000806040838503121561204d57600080fd5b61205683611b29565b946020939093013593505050565b600181811c9082168061207857607f821691505b6020821081141561209957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156120c7576120c761209f565b500390565b600067ffffffffffffffff8083168185168083038211156120ef576120ef61209f565b01949350505050565b600081518084526020808501945080840160005b838110156121315781516001600160a01b03168752958201959082019060010161210c565b509495945050505050565b600081518084526020808501945080840160005b8381101561213157815187529582019590820190600101612150565b6000815180845260208085019450848260051b860182860160005b858110156121b157838303895261219f838351611a7f565b98850198925090840190600101612187565b5090979650505050505050565b60006101208b835260206001600160a01b038c16818501528160408501526121e88285018c6120f8565b915083820360608501526121fc828b61213c565b915083820360808501528189518084528284019150828160051b850101838c0160005b8381101561224d57601f1987840301855261223b838351611a7f565b9486019492509085019060010161221f565b505086810360a0880152612261818c61216c565b94505050505061227d60c084018767ffffffffffffffff169052565b67ffffffffffffffff851660e08401528281036101008401526122a08185611a7f565b9c9b505050505050505050505050565b6080815260006122c360808301876120f8565b82810360208401526122d5818761213c565b905082810360408401526122e9818661216c565b91505082606083015295945050505050565b634e487b7160e01b600052603260045260246000fd5b60008251612323818460208701611a4f565b9190910192915050565b60006000198214156123415761234161209f565b5060010190565b84815260ff841660208201528260408201526080606082015260006109ab6080830184611a7f565b600082198211156123835761238361209f565b500190565b60006020828403121561239a57600080fd5b81516bffffffffffffffffffffffff81168114610e0857600080fdfe476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a164736f6c6343000809000a";

type GovernorCompMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernorCompMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernorCompMock__factory extends ContractFactory {
  constructor(...args: GovernorCompMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name_: string,
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernorCompMock> {
    return super.deploy(
      name_,
      token_,
      overrides || {}
    ) as Promise<GovernorCompMock>;
  }
  getDeployTransaction(
    name_: string,
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, token_, overrides || {});
  }
  attach(address: string): GovernorCompMock {
    return super.attach(address) as GovernorCompMock;
  }
  connect(signer: Signer): GovernorCompMock__factory {
    return super.connect(signer) as GovernorCompMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorCompMockInterface {
    return new utils.Interface(_abi) as GovernorCompMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorCompMock {
    return new Contract(address, _abi, signerOrProvider) as GovernorCompMock;
  }
}
