/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EnumerableBytes32SetMock,
  EnumerableBytes32SetMockInterface,
} from "../EnumerableBytes32SetMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "OperationResult",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "values",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610470806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806395bc26731161005057806395bc2673146100ca578063971217b7146100dd578063e0886f90146100f257600080fd5b80631d1a696d146100775780631f7b6d321461009f578063446bffba146100b5575b600080fd5b61008a6100853660046103b5565b610105565b60405190151581526020015b60405180910390f35b6100a7610117565b604051908152602001610096565b6100c86100c33660046103b5565b610128565b005b6100c86100d83660046103b5565b610175565b6100e5610181565b60405161009691906103ce565b6100a76101003660046103b5565b61018d565b60006101118183610199565b92915050565b600061012360006101b4565b905090565b600061013481836101be565b90507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e3381604051610169911515815260200190565b60405180910390a15050565b600061013481836101ca565b606061012360006101d6565b600061011181836101e1565b600081815260018301602052604081205415155b9392505050565b6000610111825490565b60006101ad83836101ed565b60006101ad838361023c565b60606101118261032f565b60006101ad838361038b565b600081815260018301602052604081205461023457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610111565b506000610111565b60008181526001830160205260408120548015610325576000610260600183610412565b855490915060009061027490600190610412565b90508181146102d957600086600001828154811061029457610294610437565b90600052602060002001549050808760000184815481106102b7576102b7610437565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806102ea576102ea61044d565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610111565b6000915050610111565b60608160000180548060200260200160405190810160405280929190818152602001828054801561037f57602002820191906000526020600020905b81548152602001906001019080831161036b575b50505050509050919050565b60008260000182815481106103a2576103a2610437565b9060005260206000200154905092915050565b6000602082840312156103c757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610406578351835292840192918401916001016103ea565b50909695505050505050565b60008282101561043257634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea164736f6c6343000809000a";

type EnumerableBytes32SetMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnumerableBytes32SetMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnumerableBytes32SetMock__factory extends ContractFactory {
  constructor(...args: EnumerableBytes32SetMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EnumerableBytes32SetMock> {
    return super.deploy(overrides || {}) as Promise<EnumerableBytes32SetMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EnumerableBytes32SetMock {
    return super.attach(address) as EnumerableBytes32SetMock;
  }
  connect(signer: Signer): EnumerableBytes32SetMock__factory {
    return super.connect(signer) as EnumerableBytes32SetMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnumerableBytes32SetMockInterface {
    return new utils.Interface(_abi) as EnumerableBytes32SetMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EnumerableBytes32SetMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EnumerableBytes32SetMock;
  }
}
