/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20VotesCompMock,
  ERC20VotesCompMockInterface,
} from "../ERC20VotesCompMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610140523480156200003757600080fd5b506040516200236a3803806200236a8339810160408190526200005a91620002b7565b8180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200009092919062000144565b508051620000a690600490602084019062000144565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052506200035e95505050505050565b828054620001529062000321565b90600052602060002090601f016020900481019282620001765760008555620001c1565b82601f106200019157805160ff1916838001178555620001c1565b82800160010185558215620001c1579182015b82811115620001c1578251825591602001919060010190620001a4565b50620001cf929150620001d3565b5090565b5b80821115620001cf5760008155600101620001d4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021257600080fd5b81516001600160401b03808211156200022f576200022f620001ea565b604051601f8301601f19908116603f011681019082821181831017156200025a576200025a620001ea565b816040528381526020925086838588010111156200027757600080fd5b600091505b838210156200029b57858201830151818301840152908201906200027c565b83821115620002ad5760008385830101525b9695505050505050565b60008060408385031215620002cb57600080fd5b82516001600160401b0380821115620002e357600080fd5b620002f18683870162000200565b935060208501519150808211156200030857600080fd5b50620003178582860162000200565b9150509250929050565b600181811c908216806200033657607f821691505b602082108114156200035857634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161014051611fb1620003b96000396000610a7c01526000610fc70152600061101601526000610ff101526000610f4a01526000610f7401526000610f9e0152611fb16000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c806370a08231116100f9578063a457c2d711610097578063c3cda52011610071578063c3cda520146103e1578063d505accf146103f4578063dd62ed3e14610407578063f1127ed81461044057600080fd5b8063a457c2d7146103a8578063a9059cbb146103bb578063b4b5ea57146103ce57600080fd5b80638e539e8c116100d35780638e539e8c1461036757806395d89b411461037a5780639ab24eb0146103825780639dc29fac1461039557600080fd5b806370a08231146102fb578063782d6fe1146103245780637ecebe001461035457600080fd5b80633644e5151161016657806340c10f191161014057806340c10f1914610267578063587cde1e1461027c5780635c19a95c146102c05780636fcfff45146102d357600080fd5b80633644e5151461023957806339509351146102415780633a46b1a81461025457600080fd5b806323b872dd1161019757806323b872dd14610211578063313ce567146102245780633408e4701461023357600080fd5b806306fdde03146101be578063095ea7b3146101dc57806318160ddd146101ff575b600080fd5b6101c661047d565b6040516101d39190611c8b565b60405180910390f35b6101ef6101ea366004611cfc565b61050f565b60405190151581526020016101d3565b6002545b6040519081526020016101d3565b6101ef61021f366004611d26565b610525565b604051601281526020016101d3565b46610203565b6102036105f0565b6101ef61024f366004611cfc565b6105ff565b610203610262366004611cfc565b61063b565b61027a610275366004611cfc565b6106b5565b005b6102a861028a366004611d62565b6001600160a01b039081166000908152600660205260409020541690565b6040516001600160a01b0390911681526020016101d3565b61027a6102ce366004611d62565b6106c3565b6102e66102e1366004611d62565b6106d0565b60405163ffffffff90911681526020016101d3565b610203610309366004611d62565b6001600160a01b031660009081526020819052604090205490565b610337610332366004611cfc565b6106f8565b6040516bffffffffffffffffffffffff90911681526020016101d3565b610203610362366004611d62565b61070c565b610203610375366004611d7d565b61072a565b6101c6610786565b610203610390366004611d62565b610795565b61027a6103a3366004611cfc565b61081c565b6101ef6103b6366004611cfc565b610826565b6101ef6103c9366004611cfc565b6108d7565b6103376103dc366004611d62565b6108e4565b61027a6103ef366004611da7565b6108f2565b61027a610402366004611dff565b610a28565b610203610415366004611e69565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61045361044e366004611e9c565b610b8c565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101d3565b60606003805461048c90611edc565b80601f01602080910402602001604051908101604052809291908181526020018280546104b890611edc565b80156105055780601f106104da57610100808354040283529160200191610505565b820191906000526020600020905b8154815290600101906020018083116104e857829003601f168201915b5050505050905090565b600061051c338484610c10565b50600192915050565b6001600160a01b038316600090815260016020908152604080832033845290915281205460001981146105da57828110156105cd5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105da8533858403610c10565b6105e5858585610d34565b506001949350505050565b60006105fa610f3d565b905090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161051c918590610636908690611f27565b610c10565b600043821061068c5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016105c4565b6001600160a01b03831660009081526007602052604090206106ae9083611064565b9392505050565b6106bf8282611121565b5050565b6106cd33826111bd565b50565b6001600160a01b0381166000908152600760205260408120546106f29061124e565b92915050565b60006106ae610707848461063b565b6112ce565b6001600160a01b0381166000908152600560205260408120546106f2565b600043821061077b5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016105c4565b6106f2600883611064565b60606004805461048c90611edc565b6001600160a01b0381166000908152600760205260408120548015610809576001600160a01b03831660009081526007602052604090206107d7600183611f3f565b815481106107e7576107e7611f56565b60009182526020909120015464010000000090046001600160e01b031661080c565b60005b6001600160e01b03169392505050565b6106bf8282611352565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156108c05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016105c4565b6108cd3385858403610c10565b5060019392505050565b600061051c338484610d34565b60006106f261070783610795565b834211156109425760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016105c4565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906109bc906109b49060a0016040516020818303038152906040528051906020012061136a565b8585856113b8565b90506109c7816113e0565b8614610a155760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016105c4565b610a1f81886111bd565b50505050505050565b83421115610a785760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105c4565b60007f0000000000000000000000000000000000000000000000000000000000000000888888610aa78c6113e0565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610b028261136a565b90506000610b12828787876113b8565b9050896001600160a01b0316816001600160a01b031614610b755760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105c4565b610b808a8a8a610c10565b50505050505050505050565b60408051808201909152600080825260208201526001600160a01b0383166000908152600760205260409020805463ffffffff8416908110610bd057610bd0611f56565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610c725760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105c4565b6001600160a01b038216610cd35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105c4565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610db05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016105c4565b6001600160a01b038216610e125760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105c4565b6001600160a01b03831660009081526020819052604090205481811015610ea15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016105c4565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ed8908490611f27565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f2491815260200190565b60405180910390a3610f3784848461140d565b50505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610f9657507f000000000000000000000000000000000000000000000000000000000000000046145b15610fc057507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090815b818110156110c857600061107f828461143f565b90508486828154811061109457611094611f56565b60009182526020909120015463ffffffff1611156110b4578092506110c2565b6110bf816001611f27565b91505b5061106b565b811561110c57846110da600184611f3f565b815481106110ea576110ea611f56565b60009182526020909120015464010000000090046001600160e01b031661110f565b60005b6001600160e01b031695945050505050565b61112b828261145a565b6002546bffffffffffffffffffffffff10156111af5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f7465730000000000000000000000000000000060648201526084016105c4565b610f3760086115418361154d565b6001600160a01b038281166000818152600660208181526040808420805485845282862054949093528787167fffffffffffffffffffffffff00000000000000000000000000000000000000008416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610f378284836116c6565b600063ffffffff8211156112ca5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f322062697473000000000000000000000000000000000000000000000000000060648201526084016105c4565b5090565b60006bffffffffffffffffffffffff8211156112ca5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201527f362062697473000000000000000000000000000000000000000000000000000060648201526084016105c4565b61135c8282611803565b610f3760086119588361154d565b60006106f2611377610f3d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006113c987878787611964565b915091506113d681611a51565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b505050565b6001600160a01b03838116600090815260066020526040808220548584168352912054611408929182169116836116c6565b600061144e6002848418611f6c565b6106ae90848416611f27565b6001600160a01b0382166114b05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105c4565b80600260008282546114c29190611f27565b90915550506001600160a01b038216600090815260208190526040812080548392906114ef908490611f27565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36106bf6000838361140d565b60006106ae8284611f27565b8254600090819080156115985785611566600183611f3f565b8154811061157657611576611f56565b60009182526020909120015464010000000090046001600160e01b031661159b565b60005b6001600160e01b031692506115b483858763ffffffff16565b91506000811180156115f2575043866115ce600184611f3f565b815481106115de576115de611f56565b60009182526020909120015463ffffffff16145b156116525761160082611c0c565b8661160c600184611f3f565b8154811061161c5761161c611f56565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506116bd565b8560405180604001604052806116674361124e565b63ffffffff16815260200161167b85611c0c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b816001600160a01b0316836001600160a01b0316141580156116e85750600081115b15611408576001600160a01b03831615611776576001600160a01b03831660009081526007602052604081208190611723906119588561154d565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161176b929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611408576001600160a01b038216600090815260076020526040812081906117ac906115418561154d565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516117f4929190918252602082015260400190565b60405180910390a25050505050565b6001600160a01b0382166118635760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105c4565b6001600160a01b038216600090815260208190526040902054818110156118d75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105c4565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611906908490611f3f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36114088360008461140d565b60006106ae8284611f3f565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561199b5750600090506003611a48565b8460ff16601b141580156119b357508460ff16601c14155b156119c45750600090506004611a48565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a18573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a4157600060019250925050611a48565b9150600090505b94509492505050565b6000816004811115611a6557611a65611f8e565b1415611a6e5750565b6001816004811115611a8257611a82611f8e565b1415611ad05760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105c4565b6002816004811115611ae457611ae4611f8e565b1415611b325760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105c4565b6003816004811115611b4657611b46611f8e565b1415611b9f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105c4565b6004816004811115611bb357611bb3611f8e565b14156106cd5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105c4565b60006001600160e01b038211156112ca5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f323420626974730000000000000000000000000000000000000000000000000060648201526084016105c4565b600060208083528351808285015260005b81811015611cb857858101830151858201604001528201611c9c565b81811115611cca576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114611cf757600080fd5b919050565b60008060408385031215611d0f57600080fd5b611d1883611ce0565b946020939093013593505050565b600080600060608486031215611d3b57600080fd5b611d4484611ce0565b9250611d5260208501611ce0565b9150604084013590509250925092565b600060208284031215611d7457600080fd5b6106ae82611ce0565b600060208284031215611d8f57600080fd5b5035919050565b803560ff81168114611cf757600080fd5b60008060008060008060c08789031215611dc057600080fd5b611dc987611ce0565b95506020870135945060408701359350611de560608801611d96565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611e1a57600080fd5b611e2388611ce0565b9650611e3160208901611ce0565b95506040880135945060608801359350611e4d60808901611d96565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611e7c57600080fd5b611e8583611ce0565b9150611e9360208401611ce0565b90509250929050565b60008060408385031215611eaf57600080fd5b611eb883611ce0565b9150602083013563ffffffff81168114611ed157600080fd5b809150509250929050565b600181811c90821680611ef057607f821691505b6020821081141561140257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611f3a57611f3a611f11565b500190565b600082821015611f5157611f51611f11565b500390565b634e487b7160e01b600052603260045260246000fd5b600082611f8957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000809000a";

type ERC20VotesCompMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20VotesCompMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20VotesCompMock__factory extends ContractFactory {
  constructor(...args: ERC20VotesCompMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20VotesCompMock> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<ERC20VotesCompMock>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): ERC20VotesCompMock {
    return super.attach(address) as ERC20VotesCompMock;
  }
  connect(signer: Signer): ERC20VotesCompMock__factory {
    return super.connect(signer) as ERC20VotesCompMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20VotesCompMockInterface {
    return new utils.Interface(_abi) as ERC20VotesCompMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20VotesCompMock {
    return new Contract(address, _abi, signerOrProvider) as ERC20VotesCompMock;
  }
}
