/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyGovernor2, MyGovernor2Interface } from "../MyGovernor2";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVotes",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract TimelockController",
        name: "_timelock",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eta",
        type: "uint256",
      },
    ],
    name: "ProposalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldQuorumNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "QuorumNumeratorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldTimelock",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTimelock",
        type: "address",
      },
    ],
    name: "TimelockChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalEta",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "queue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TimelockController",
        name: "newTimelock",
        type: "address",
      },
    ],
    name: "updateTimelock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200303d3803806200303d833981016040819052620000359162000353565b600482826040518060400160405280600a81526020016926bca3b7bb32b93737b960b11b815250806200006d6200014360201b60201c565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c052610120525050825162000113925060009150602084019062000294565b50620001219050816200015e565b506001600160a01b0316610140526200013a81620001c7565b505050620003cf565b6040805180820190915260018152603160f81b602082015290565b600254604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b60648111156200024f5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a40160405180910390fd5b600480549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b828054620002a29062000392565b90600052602060002090601f016020900481019282620002c6576000855562000311565b82601f10620002e157805160ff191683800117855562000311565b8280016001018555821562000311579182015b8281111562000311578251825591602001919060010190620002f4565b506200031f92915062000323565b5090565b5b808211156200031f576000815560010162000324565b6001600160a01b03811681146200035057600080fd5b50565b600080604083850312156200036757600080fd5b825162000374816200033a565b602084015190925062000387816200033a565b809150509250929050565b600181811c90821680620003a757607f821691505b60208210811415620003c957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161014051612c05620004386000396000818161064f0152818161137a0152611413015260006115dc0152600061162b015260006116060152600061155f01526000611589015260006115b30152612c056000f3fe6080604052600436106101d15760003560e01c80637d5e81e2116100f7578063c28bc2fa11610095578063deaaa7cc11610064578063deaaa7cc146105c9578063eb9019d4146105fd578063f8ce560a1461061d578063fc0c546a1461063d57600080fd5b8063c28bc2fa14610511578063c59057e414610531578063d33219b414610551578063dd4e2ba51461058357600080fd5b8063a890c910116100d1578063a890c91014610495578063ab58fb8e146104b5578063b58131b0146104d5578063c01f9e37146104f157600080fd5b80637d5e81e21461044c57806397c3d3341461046c578063a7713a701461048057600080fd5b80633932abb11161016f578063544ffc9c1161013e578063544ffc9c1461038d57806354fd4d50146103e2578063567813881461040c5780637b3c71d31461042c57600080fd5b80633932abb1146102e25780633bccf4fd146102f65780633e4f49e614610316578063438596321461034357600080fd5b806306fdde03116101ab57806306fdde031461026d578063160cbed71461028f5780632656227d146102af5780632d63f693146102c257600080fd5b806301ffc9a7146101f957806302a251a31461022e57806306f3f9e61461024d57600080fd5b366101f457306101df610671565b6001600160a01b0316146101f257600080fd5b005b600080fd5b34801561020557600080fd5b5061021961021436600461214a565b61068a565b60405190151581526020015b60405180910390f35b34801561023a57600080fd5b5061b2fa5b604051908152602001610225565b34801561025957600080fd5b506101f2610268366004612174565b61069b565b34801561027957600080fd5b50610282610714565b60405161022591906121e9565b34801561029b57600080fd5b5061023f6102aa366004612438565b6107a6565b61023f6102bd366004612438565b6109fe565b3480156102ce57600080fd5b5061023f6102dd366004612174565b610b0b565b3480156102ee57600080fd5b50600161023f565b34801561030257600080fd5b5061023f6103113660046124de565b610b44565b34801561032257600080fd5b50610336610331366004612174565b610bd8565b6040516102259190612542565b34801561034f57600080fd5b5061021961035e36600461256a565b60008281526005602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b34801561039957600080fd5b506103c76103a8366004612174565b6000908152600560205260409020805460018201546002909201549092565b60408051938452602084019290925290820152606001610225565b3480156103ee57600080fd5b506040805180820190915260018152603160f81b6020820152610282565b34801561041857600080fd5b5061023f61042736600461259a565b610be3565b34801561043857600080fd5b5061023f61044736600461260f565b610c0c565b34801561045857600080fd5b5061023f610467366004612669565b610c5e565b34801561047857600080fd5b50606461023f565b34801561048c57600080fd5b5060045461023f565b3480156104a157600080fd5b506101f26104b036600461272a565b610c75565b3480156104c157600080fd5b5061023f6104d0366004612174565b610ce6565b3480156104e157600080fd5b50683635c9adc5dea0000061023f565b3480156104fd57600080fd5b5061023f61050c366004612174565b610d90565b34801561051d57600080fd5b506101f261052c366004612747565b610dc0565b34801561053d57600080fd5b5061023f61054c366004612438565b610e71565b34801561055d57600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610225565b34801561058f57600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610282565b3480156105d557600080fd5b5061023f7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561060957600080fd5b5061023f61061836600461278b565b610eab565b34801561062957600080fd5b5061023f610638366004612174565b610eb7565b34801561064957600080fd5b5061056b7f000000000000000000000000000000000000000000000000000000000000000081565b60006106856002546001600160a01b031690565b905090565b600061069582610ec2565b92915050565b6106a3610671565b6001600160a01b0316336001600160a01b0316146107085760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e6365000000000000000060448201526064015b60405180910390fd5b61071181610ee7565b50565b606060008054610723906127b7565b80601f016020809104026020016040519081016040528092919081815260200182805461074f906127b7565b801561079c5780601f106107715761010080835404028352916020019161079c565b820191906000526020600020905b81548152906001019060200180831161077f57829003601f168201915b5050505050905090565b6000806107b586868686610e71565b905060046107c282610bd8565b60078111156107d3576107d361252c565b1461082a5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b60648201526084016106ff565b6002546040805163793d064960e11b815290516000926001600160a01b03169163f27a0c92916004808301926020929190829003018186803b15801561086f57600080fd5b505afa158015610883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a791906127f2565b60025460405163b1c5f42760e01b81529192506001600160a01b03169063b1c5f427906108e1908a908a908a906000908b906004016128d4565b60206040518083038186803b1580156108f957600080fd5b505afa15801561090d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093191906127f2565b6000838152600360205260408082209290925560025491516308f2a0bb60e41b81526001600160a01b0390921691638f2a0bb09161097c918b918b918b91908b908990600401612922565b600060405180830381600087803b15801561099657600080fd5b505af11580156109aa573d6000803e3d6000fd5b505050507f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda28928282426109dc9190612990565b6040805192835260208301919091520160405180910390a15095945050505050565b600080610a0d86868686610e71565b90506000610a1a82610bd8565b90506004816007811115610a3057610a3061252c565b1480610a4d57506005816007811115610a4b57610a4b61252c565b145b610aa35760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b60648201526084016106ff565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a1610b018288888888610faf565b5095945050505050565b600081815260016020908152604080832081519283019091525467ffffffffffffffff16908190525b67ffffffffffffffff1692915050565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610bb090610ba89060800160405160208183030381529060405280519060200120610fbc565b86868661100a565b9050610bcd87828860405180602001604052806000815250611028565b979650505050505050565b600061069582611134565b600080339050610c0484828560405180602001604052806000815250611028565b949350505050565b600080339050610c5486828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102892505050565b9695505050505050565b6000610c6c8585858561129c565b95945050505050565b610c7d610671565b6001600160a01b0316336001600160a01b031614610cdd5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e6365000000000000000060448201526064016106ff565b610711816112aa565b60025460008281526003602052604080822054905163d45c443560e01b81526004810191909152909182916001600160a01b039091169063d45c44359060240160206040518083038186803b158015610d3e57600080fd5b505afa158015610d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7691906127f2565b905080600114610d865780610d89565b60005b9392505050565b600081815260016020818152604080842081519283019091529091015467ffffffffffffffff1690819052610b34565b610dc8610671565b6001600160a01b0316336001600160a01b031614610e285760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e6365000000000000000060448201526064016106ff565b610e6a8483838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525088925061132b915050565b5050505050565b600084848484604051602001610e8a94939291906129a8565b60408051601f19818403018152919052805160209091012095945050505050565b6000610d898383611351565b6000610695826113f6565b60006001600160e01b03198216636e665ced60e01b14806106955750610695826114a9565b6064811115610f6a5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a4016106ff565b600480549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b610e6a85858585856114de565b6000610695610fc9611552565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061101b87878787611679565b91509150610b0181611766565b600084815260016020819052604082209061104287610bd8565b60078111156110535761105361252c565b146110ac5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b60648201526084016106ff565b6040805160208101909152815467ffffffffffffffff16908190526000906110d5908790610eab565b90506110e387878784611921565b856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48887848860405161112294939291906129f3565b60405180910390a29695505050505050565b60008061114083611abe565b905060048160078111156111565761115661252c565b146111615792915050565b6000838152600360205260409020548061117c575092915050565b600254604051632ab0f52960e01b8152600481018390526001600160a01b0390911690632ab0f5299060240160206040518083038186803b1580156111c057600080fd5b505afa1580156111d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f89190612a1b565b15611207575060079392505050565b600254604051632c258a9f60e11b8152600481018390526001600160a01b039091169063584b153e9060240160206040518083038186803b15801561124b57600080fd5b505afa15801561125f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112839190612a1b565b15611292575060059392505050565b5060029392505050565b6000610c6c85858585611bca565b600254604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060610c04848484604051806060016040528060298152602001612bd060299139611f19565b604051630748d63560e31b81526001600160a01b038381166004830152602482018390526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b1580156113be57600080fd5b505afa1580156113d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8991906127f2565b60006064600454604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b15801561145d57600080fd5b505afa158015611471573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149591906127f2565b61149f9190612a3d565b6106959190612a5c565b60006001600160e01b0319821663bf26d89760e01b148061069557506301ffc9a760e01b6001600160e01b0319831614610695565b60025460405163e38335e560e01b81526001600160a01b039091169063e38335e59034906115199088908890889060009089906004016128d4565b6000604051808303818588803b15801561153257600080fd5b505af1158015611546573d6000803e3d6000fd5b50505050505050505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156115ab57507f000000000000000000000000000000000000000000000000000000000000000046145b156115d557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156116b0575060009050600361175d565b8460ff16601b141580156116c857508460ff16601c14155b156116d9575060009050600461175d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561172d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166117565760006001925092505061175d565b9150600090505b94509492505050565b600081600481111561177a5761177a61252c565b14156117835750565b60018160048111156117975761179761252c565b14156117e55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106ff565b60028160048111156117f9576117f961252c565b14156118475760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106ff565b600381600481111561185b5761185b61252c565b14156118b45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106ff565b60048160048111156118c8576118c861252c565b14156107115760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106ff565b60008481526005602090815260408083206001600160a01b0387168452600381019092529091205460ff16156119bf5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160448201527f647920636173740000000000000000000000000000000000000000000000000060648201526084016106ff565b6001600160a01b03841660009081526003820160205260408120805460ff1916600117905560ff168360ff161415611a105781816000016000828254611a059190612990565b90915550610e6a9050565b60ff831660011415611a305781816001016000828254611a059190612990565b60ff831660021415611a505781816002016000828254611a059190612990565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160448201527f6c756520666f7220656e756d20566f746554797065000000000000000000000060648201526084016106ff565b6000818152600160205260408120600281015460ff1615611ae25750600792915050565b6002810154610100900460ff1615611afd5750600292915050565b6000611b0884610b0b565b905080611b575760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c20696400000060448201526064016106ff565b438110611b68575060009392505050565b6000611b7385610d90565b9050438110611b8757506001949350505050565b611b9085612056565b8015611baf575060008581526005602052604090208054600190910154115b15611bbf57506004949350505050565b506003949350505050565b6000683635c9adc5dea00000611be533610618600143612a7e565b1015611c655760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a2070726f7060448201527f6f73657220766f7465732062656c6f772070726f706f73616c207468726573686064820152621bdb1960ea1b608482015260a4016106ff565b6000611c7a8686868680519060200120610e71565b90508451865114611cd75760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016106ff565b8351865114611d325760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016106ff565b6000865111611d835760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c000000000000000060448201526064016106ff565b6000818152600160209081526040918290208251918201909252815467ffffffffffffffff169081905215611e045760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b60648201526084016106ff565b6000611e10600161208d565b611e194361208d565b611e239190612a95565b90506000611e3261b2fa61208d565b611e3c9083612a95565b835467ffffffffffffffff191667ffffffffffffffff8416178455905060018301805467ffffffffffffffff191667ffffffffffffffff83161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d5167ffffffffffffffff811115611eb757611eb76121fc565b604051908082528060200260200182016040528015611eea57816020015b6060815260200190600190039081611ed55790505b508c88888e604051611f0499989796959493929190612ac1565b60405180910390a15091979650505050505050565b606082471015611f915760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106ff565b6001600160a01b0385163b611fe85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106ff565b600080866001600160a01b031685876040516120049190612bb3565b60006040518083038185875af1925050503d8060008114612041576040519150601f19603f3d011682016040523d82523d6000602084013e612046565b606091505b5091509150610bcd828286612111565b6000818152600560205260408120600281015460018201546120789190612990565b61208461063885610b0b565b11159392505050565b600067ffffffffffffffff82111561210d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f342062697473000000000000000000000000000000000000000000000000000060648201526084016106ff565b5090565b60608315612120575081610d89565b8251156121305782518084602001fd5b8160405162461bcd60e51b81526004016106ff91906121e9565b60006020828403121561215c57600080fd5b81356001600160e01b031981168114610d8957600080fd5b60006020828403121561218657600080fd5b5035919050565b60005b838110156121a8578181015183820152602001612190565b838111156121b7576000848401525b50505050565b600081518084526121d581602086016020860161218d565b601f01601f19169290920160200192915050565b602081526000610d8960208301846121bd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561223b5761223b6121fc565b604052919050565b600067ffffffffffffffff82111561225d5761225d6121fc565b5060051b60200190565b6001600160a01b038116811461071157600080fd5b600082601f83011261228d57600080fd5b813560206122a261229d83612243565b612212565b82815260059290921b840181019181810190868411156122c157600080fd5b8286015b848110156122e55780356122d881612267565b83529183019183016122c5565b509695505050505050565b600082601f83011261230157600080fd5b8135602061231161229d83612243565b82815260059290921b8401810191818101908684111561233057600080fd5b8286015b848110156122e55780358352918301918301612334565b600067ffffffffffffffff831115612365576123656121fc565b612378601f8401601f1916602001612212565b905082815283838301111561238c57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126123b457600080fd5b813560206123c461229d83612243565b82815260059290921b840181019181810190868411156123e357600080fd5b8286015b848110156122e557803567ffffffffffffffff8111156124075760008081fd5b8701603f810189136124195760008081fd5b61242a89868301356040840161234b565b8452509183019183016123e7565b6000806000806080858703121561244e57600080fd5b843567ffffffffffffffff8082111561246657600080fd5b6124728883890161227c565b9550602087013591508082111561248857600080fd5b612494888389016122f0565b945060408701359150808211156124aa57600080fd5b506124b7878288016123a3565b949793965093946060013593505050565b803560ff811681146124d957600080fd5b919050565b600080600080600060a086880312156124f657600080fd5b85359450612506602087016124c8565b9350612514604087016124c8565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061256457634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561257d57600080fd5b82359150602083013561258f81612267565b809150509250929050565b600080604083850312156125ad57600080fd5b823591506125bd602084016124c8565b90509250929050565b60008083601f8401126125d857600080fd5b50813567ffffffffffffffff8111156125f057600080fd5b60208301915083602082850101111561260857600080fd5b9250929050565b6000806000806060858703121561262557600080fd5b84359350612635602086016124c8565b9250604085013567ffffffffffffffff81111561265157600080fd5b61265d878288016125c6565b95989497509550505050565b6000806000806080858703121561267f57600080fd5b843567ffffffffffffffff8082111561269757600080fd5b6126a38883890161227c565b955060208701359150808211156126b957600080fd5b6126c5888389016122f0565b945060408701359150808211156126db57600080fd5b6126e7888389016123a3565b935060608701359150808211156126fd57600080fd5b508501601f8101871361270f57600080fd5b61271e8782356020840161234b565b91505092959194509250565b60006020828403121561273c57600080fd5b8135610d8981612267565b6000806000806060858703121561275d57600080fd5b843561276881612267565b935060208501359250604085013567ffffffffffffffff81111561265157600080fd5b6000806040838503121561279e57600080fd5b82356127a981612267565b946020939093013593505050565b600181811c908216806127cb57607f821691505b602082108114156127ec57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561280457600080fd5b5051919050565b600081518084526020808501945080840160005b838110156128445781516001600160a01b03168752958201959082019060010161281f565b509495945050505050565b600081518084526020808501945080840160005b8381101561284457815187529582019590820190600101612863565b600081518084526020808501808196508360051b8101915082860160005b858110156128c75782840389526128b58483516121bd565b9885019893509084019060010161289d565b5091979650505050505050565b60a0815260006128e760a083018861280b565b82810360208401526128f9818861284f565b9050828103604084015261290d818761287f565b60608401959095525050608001529392505050565b60c08152600061293560c083018961280b565b8281036020840152612947818961284f565b9050828103604084015261295b818861287f565b60608401969096525050608081019290925260a0909101529392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156129a3576129a361297a565b500190565b6080815260006129bb608083018761280b565b82810360208401526129cd818761284f565b905082810360408401526129e1818661287f565b91505082606083015295945050505050565b84815260ff84166020820152826040820152608060608201526000610c5460808301846121bd565b600060208284031215612a2d57600080fd5b81518015158114610d8957600080fd5b6000816000190483118215151615612a5757612a5761297a565b500290565b600082612a7957634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612a9057612a9061297a565b500390565b600067ffffffffffffffff808316818516808303821115612ab857612ab861297a565b01949350505050565b60006101208b835260206001600160a01b038c1681850152816040850152612aeb8285018c61280b565b91508382036060850152612aff828b61284f565b915083820360808501528189518084528284019150828160051b850101838c0160005b83811015612b5057601f19878403018552612b3e8383516121bd565b94860194925090850190600101612b22565b505086810360a0880152612b64818c61287f565b945050505050612b8060c084018767ffffffffffffffff169052565b67ffffffffffffffff851660e0840152828103610100840152612ba381856121bd565b9c9b505050505050505050505050565b60008251612bc581846020870161218d565b919091019291505056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a164736f6c6343000809000a";

type MyGovernor2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyGovernor2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyGovernor2__factory extends ContractFactory {
  constructor(...args: MyGovernor2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _token: string,
    _timelock: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyGovernor2> {
    return super.deploy(
      _token,
      _timelock,
      overrides || {}
    ) as Promise<MyGovernor2>;
  }
  getDeployTransaction(
    _token: string,
    _timelock: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _timelock, overrides || {});
  }
  attach(address: string): MyGovernor2 {
    return super.attach(address) as MyGovernor2;
  }
  connect(signer: Signer): MyGovernor2__factory {
    return super.connect(signer) as MyGovernor2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyGovernor2Interface {
    return new utils.Interface(_abi) as MyGovernor2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyGovernor2 {
    return new Contract(address, _abi, signerOrProvider) as MyGovernor2;
  }
}
