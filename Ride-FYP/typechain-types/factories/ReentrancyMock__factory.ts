/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReentrancyMock,
  ReentrancyMockInterface,
} from "../ReentrancyMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "callback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ReentrancyAttack",
        name: "attacker",
        type: "address",
      },
    ],
    name: "countAndCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "countLocalRecursive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "countThisRecursive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016000818155905561050b806100296000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638c5344fa116100505780638c5344fa1461009157806396ffa690146100a4578063b672ad8b146100b757600080fd5b8063083b27321461006c57806361bc221a14610076575b600080fd5b6100746100ca565b005b61007f60015481565b60405190815260200160405180910390f35b61007461009f366004610428565b610136565b6100746100b2366004610428565b6102a3565b6100746100c5366004610441565b610317565b600260005414156101225760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260005561012f61040f565b6001600055565b600260005414156101895760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610119565b6002600055801561029b5761019c61040f565b6000306101aa600184610494565b6040516024016101bc91815260200190565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16634629a27d60e11b1790525161020691906104ab565b6000604051808303816000865af19150503d8060008114610243576040519150601f19603f3d011682016040523d82523d6000602084013e610248565b606091505b50509050806102995760405162461bcd60e51b815260206004820152601b60248201527f5265656e7472616e63794d6f636b3a206661696c65642063616c6c00000000006044820152606401610119565b505b506001600055565b600260005414156102f65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610119565b6002600055801561029b5761030961040f565b61029b6100b2600183610494565b6002600054141561036a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610119565b600260005561037761040f565b604051630a2df1ed60e01b815263041d939960e11b60048201527f083b2732f78169bfaad6b407fa338cc97d697ed69d3915a18239cc111d51a4029073ffffffffffffffffffffffffffffffffffffffff831690630a2df1ed90602401600060405180830381600087803b1580156103ee57600080fd5b505af1158015610402573d6000803e3d6000fd5b5050600160005550505050565b600180600082825461042191906104e6565b9091555050565b60006020828403121561043a57600080fd5b5035919050565b60006020828403121561045357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461047757600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156104a6576104a661047e565b500390565b6000825160005b818110156104cc57602081860181015185830152016104b2565b818111156104db576000828501525b509190910192915050565b600082198211156104f9576104f961047e565b50019056fea164736f6c6343000809000a";

type ReentrancyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentrancyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentrancyMock__factory extends ContractFactory {
  constructor(...args: ReentrancyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReentrancyMock> {
    return super.deploy(overrides || {}) as Promise<ReentrancyMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ReentrancyMock {
    return super.attach(address) as ReentrancyMock;
  }
  connect(signer: Signer): ReentrancyMock__factory {
    return super.connect(signer) as ReentrancyMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentrancyMockInterface {
    return new utils.Interface(_abi) as ReentrancyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReentrancyMock {
    return new Contract(address, _abi, signerOrProvider) as ReentrancyMock;
  }
}
