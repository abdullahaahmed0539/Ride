/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RefundEscrow, RefundEscrowInterface } from "../RefundEscrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "beneficiary_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RefundsClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RefundsEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "refundee",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
    ],
    name: "depositsOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableRefunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum RefundEscrow.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawalAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610d15380380610d1583398101604081905261002f91610113565b610038336100c3565b6001600160a01b0381166100a85760405162461bcd60e51b815260206004820152602d60248201527f526566756e64457363726f773a2062656e65666963696172792069732074686560448201526c207a65726f206164647265737360981b606482015260840160405180910390fd5b6001600160a01b03166080526002805460ff19169055610143565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561012557600080fd5b81516001600160a01b038116811461013c57600080fd5b9392505050565b608051610bb16101646000396000818160db015261065a0152610bb16000f3fe6080604052600436106100c75760003560e01c80638da5cb5b11610074578063e3a9db1a1161004e578063e3a9db1a146101fc578063f2fde38b14610240578063f340fa011461026057600080fd5b80638da5cb5b146101a95780639af6549a146101c7578063c19d93fb146101dc57600080fd5b8063685ca194116100a5578063685ca1941461014f578063715018a61461017f5780638c52dc411461019457600080fd5b806338af3eed146100cc57806343d726d61461011857806351cff8d91461012f575b600080fd5b3480156100d857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012457600080fd5b5061012d610273565b005b34801561013b57600080fd5b5061012d61014a366004610b1c565b610395565b34801561015b57600080fd5b5061016f61016a366004610b1c565b61041c565b604051901515815260200161010f565b34801561018b57600080fd5b5061012d61043e565b3480156101a057600080fd5b5061012d6104a4565b3480156101b557600080fd5b506000546001600160a01b03166100fb565b3480156101d357600080fd5b5061012d6105c2565b3480156101e857600080fd5b5060025460ff1660405161010f9190610b56565b34801561020857600080fd5b50610232610217366004610b1c565b6001600160a01b031660009081526001602052604090205490565b60405190815260200161010f565b34801561024c57600080fd5b5061012d61025b366004610b1c565b610680565b61012d61026e366004610b1c565b61075f565b6000546001600160a01b031633146102d25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600060025460ff1660028111156102eb576102eb610b40565b1461035e5760405162461bcd60e51b815260206004820152602960248201527f526566756e64457363726f773a2063616e206f6e6c7920636c6f73652077686960448201527f6c6520616374697665000000000000000000000000000000000000000000000060648201526084016102c9565b6002805460ff1916811790556040517f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f90600090a1565b61039e8161041c565b6104105760405162461bcd60e51b815260206004820152603360248201527f436f6e646974696f6e616c457363726f773a207061796565206973206e6f742060448201527f616c6c6f77656420746f2077697468647261770000000000000000000000000060648201526084016102c9565b610419816107f4565b50565b6000600160025460ff16600281111561043757610437610b40565b1492915050565b6000546001600160a01b031633146104985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c9565b6104a260006108bd565b565b6000546001600160a01b031633146104fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c9565b600060025460ff16600281111561051757610517610b40565b1461058a5760405162461bcd60e51b815260206004820152603260248201527f526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726560448201527f66756e6473207768696c6520616374697665000000000000000000000000000060648201526084016102c9565b6002805460ff191660011790556040517f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8990600090a1565b6002805460ff1660028111156105da576105da610b40565b1461064d5760405162461bcd60e51b815260206004820152603860248201527f526566756e64457363726f773a2062656e65666963696172792063616e206f6e60448201527f6c79207769746864726177207768696c6520636c6f736564000000000000000060648201526084016102c9565b6104a26001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001647610925565b6000546001600160a01b031633146106da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c9565b6001600160a01b0381166107565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102c9565b610419816108bd565b600060025460ff16600281111561077857610778610b40565b146107eb5760405162461bcd60e51b815260206004820152602b60248201527f526566756e64457363726f773a2063616e206f6e6c79206465706f736974207760448201527f68696c652061637469766500000000000000000000000000000000000000000060648201526084016102c9565b61041981610a43565b6000546001600160a01b0316331461084e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c9565b6001600160a01b03811660008181526001602052604081208054919055906108769082610925565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516108b191815260200190565b60405180910390a25050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b804710156109755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102c9565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146109c2576040519150601f19603f3d011682016040523d82523d6000602084013e6109c7565b606091505b5050905080610a3e5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102c9565b505050565b6000546001600160a01b03163314610a9d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c9565b6001600160a01b038116600090815260016020526040812080543492839291610ac7908490610b7e565b90915550506040518181526001600160a01b038316907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906020016108b1565b6001600160a01b038116811461041957600080fd5b600060208284031215610b2e57600080fd5b8135610b3981610b07565b9392505050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310610b7857634e487b7160e01b600052602160045260246000fd5b91905290565b60008219821115610b9f57634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c6343000809000a";

type RefundEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RefundEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RefundEscrow__factory extends ContractFactory {
  constructor(...args: RefundEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    beneficiary_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RefundEscrow> {
    return super.deploy(beneficiary_, overrides || {}) as Promise<RefundEscrow>;
  }
  getDeployTransaction(
    beneficiary_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(beneficiary_, overrides || {});
  }
  attach(address: string): RefundEscrow {
    return super.attach(address) as RefundEscrow;
  }
  connect(signer: Signer): RefundEscrow__factory {
    return super.connect(signer) as RefundEscrow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RefundEscrowInterface {
    return new utils.Interface(_abi) as RefundEscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RefundEscrow {
    return new Contract(address, _abi, signerOrProvider) as RefundEscrow;
  }
}
