/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SafeERC20Wrapper,
  SafeERC20WrapperInterface,
} from "../SafeERC20Wrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowance_",
        type: "uint256",
      },
    ],
    name: "setAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a73380380610a7383398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6109e0806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063811c34d31161005b578063811c34d3146100bd5780638a4068dd146100c5578063b759f954146100cd578063de242ff4146100e057600080fd5b806310bad4cf1461008257806311e330b2146100975780633ba93f26146100aa575b600080fd5b6100956100903660046108de565b6100fa565b005b6100956100a53660046108de565b610117565b6100956100b83660046108de565b610131565b610095610192565b6100956101af565b6100956100db3660046108de565b6101c9565b6100e86101e3565b60405190815260200160405180910390f35b60008054610114916001600160a01b03909116908361026c565b50565b60008054610114916001600160a01b039091169083610400565b600054604051631dd49f9360e11b8152600481018390526001600160a01b0390911690633ba93f2690602401600060405180830381600087803b15801561017757600080fd5b505af115801561018b573d6000803e3d6000fd5b5050505050565b600080546101ad916001600160a01b039091169080806104c7565b565b600080546101ad916001600160a01b0390911690806104ff565b60008054610114916001600160a01b039091169083610534565b60008054604051636eb1769f60e11b815260048101839052602481018390526001600160a01b039091169063dd62ed3e9060440160206040518083038186803b15801561022f57600080fd5b505afa158015610243573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026791906108f7565b905090565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b1580156102b757600080fd5b505afa1580156102cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ef91906108f7565b90508181101561036c5760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e6365206260448201527f656c6f77207a65726f000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6040516001600160a01b0384166024820152828203604482018190529061018b90869063095ea7b360e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261065f565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561044c57600080fd5b505afa158015610460573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048491906108f7565b61048e9190610910565b6040516001600160a01b0385166024820152604481018290529091506104c190859063095ea7b360e01b9060640161039c565b50505050565b6040516001600160a01b03808516602483015283166044820152606481018290526104c19085906323b872dd60e01b9060840161039c565b6040516001600160a01b03831660248201526044810182905261052f90849063a9059cbb60e01b9060640161039c565b505050565b8015806105bd5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561058357600080fd5b505afa158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb91906108f7565b155b61062f5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610363565b6040516001600160a01b03831660248201526044810182905261052f90849063095ea7b360e01b9060640161039c565b60006106b4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107449092919063ffffffff16565b80519091501561052f57808060200190518101906106d29190610936565b61052f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610363565b6060610753848460008561075d565b90505b9392505050565b6060824710156107d55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610363565b6001600160a01b0385163b61082c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610363565b600080866001600160a01b031685876040516108489190610984565b60006040518083038185875af1925050503d8060008114610885576040519150601f19603f3d011682016040523d82523d6000602084013e61088a565b606091505b509150915061089a8282866108a5565b979650505050505050565b606083156108b4575081610756565b8251156108c45782518084602001fd5b8160405162461bcd60e51b815260040161036391906109a0565b6000602082840312156108f057600080fd5b5035919050565b60006020828403121561090957600080fd5b5051919050565b6000821982111561093157634e487b7160e01b600052601160045260246000fd5b500190565b60006020828403121561094857600080fd5b8151801515811461075657600080fd5b60005b8381101561097357818101518382015260200161095b565b838111156104c15750506000910152565b60008251610996818460208701610958565b9190910192915050565b60208152600082518060208401526109bf816040850160208701610958565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a";

type SafeERC20WrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeERC20WrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeERC20Wrapper__factory extends ContractFactory {
  constructor(...args: SafeERC20WrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafeERC20Wrapper> {
    return super.deploy(token, overrides || {}) as Promise<SafeERC20Wrapper>;
  }
  getDeployTransaction(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  attach(address: string): SafeERC20Wrapper {
    return super.attach(address) as SafeERC20Wrapper;
  }
  connect(signer: Signer): SafeERC20Wrapper__factory {
    return super.connect(signer) as SafeERC20Wrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeERC20WrapperInterface {
    return new utils.Interface(_abi) as SafeERC20WrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeERC20Wrapper {
    return new Contract(address, _abi, signerOrProvider) as SafeERC20Wrapper;
  }
}
